{
  "contractName": "StakingRewardsFactory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_rewardsToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_stakingRewardsGenesis",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardsToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingRewardsGenesis",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakingRewardsInfoByStakingToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "stakingRewards",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "rewardAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stakingTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "stakingToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "rewardAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rewardsDuration",
          "type": "uint256"
        }
      ],
      "name": "deploy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "stakingToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "rewardAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rewardsDuration",
          "type": "uint256"
        }
      ],
      "name": "update",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimRewardAmounts",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "stakingToken",
          "type": "address"
        }
      ],
      "name": "claimRewardAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "pullExtraTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardsToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_stakingRewardsGenesis\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"stakingToken\",\"type\":\"address\"}],\"name\":\"claimRewardAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimRewardAmounts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"stakingToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardsDuration\",\"type\":\"uint256\"}],\"name\":\"deploy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"pullExtraTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingRewardsGenesis\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakingRewardsInfoByStakingToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"stakingRewards\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakingTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"stakingToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardsDuration\",\"type\":\"uint256\"}],\"name\":\"update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/StakingRewardsFactory.sol\":\"StakingRewardsFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xfaad496c1c944b6259b7dc70b4865eb1775d6402bc0c81b38a0b24d9f525ae37\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f60ddc4639589b1d7a87cd647561be4c71ddf9a9dcf55f38db75e24ef1f6c5b\",\"dweb:/ipfs/QmTocvyQx3DPrzsFePtrhDGM6eYxUh3v8iBN3D59yoeuBt\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"project:/contracts/IStakingRewards.sol\":{\"keccak256\":\"0x46cad1f2665523481a603f0c57f893f8324b5c83cdeb2a042171ed4f3e82d3ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://331b063a30b53fa4d78457f8f0f60077ae1e1f53412b1812940683ac6934c9f0\",\"dweb:/ipfs/QmbhM61CKcXJroPt4QvkQprpDf23fwfFUSd5ydvMyL4Lu4\"]},\"project:/contracts/RewardsDistributionRecipient.sol\":{\"keccak256\":\"0xe367cf37631fa2c04e29032dcf750c945f71bb2fd2c13395c3f7479ce70413f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb37b1d544f843fe487c7482a447d84e7809811e964e54880e5084d9f3883ff5\",\"dweb:/ipfs/QmW8rcxsKXKkvhWfKaHs4MgJ2t1dCki2qaXXymi8bKZEHH\"]},\"project:/contracts/StakingRewards.sol\":{\"keccak256\":\"0xc9d1acdca4723135a60043157b3bdc67a044af76fbbece6ad4b87428806078d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7ab23ef1c2ace271c1116a75e29e7e09cc97ffb78f848b6430e6345a16e59fd\",\"dweb:/ipfs/QmUWTA7eHkwdtxKzVSXWMY42Y9LXkz9LELm2eo79jSp4pa\"]},\"project:/contracts/StakingRewardsFactory.sol\":{\"keccak256\":\"0x8596c59d7bcaf23c4f76d5e4089167c17fd07bab7f0bdf32e36c11af266ebfe6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4bca852559da4149f123912c70118f7017e9b5c0d343b7e190e892dee75e1fb3\",\"dweb:/ipfs/QmU4ywiB6z7EbJtap8ArxzzjJohTHM27ucR1U3PmvkWN2L\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516125d63803806125d683398101604081905261002f9161012b565b610038336100db565b428110156100b25760405162461bcd60e51b815260206004820152603460248201527f5374616b696e6752657761726473466163746f72793a3a636f6e73747275637460448201527f6f723a2067656e6573697320746f6f20736f6f6e000000000000000000000000606482015260840160405180910390fd5b600180546001600160a01b0319166001600160a01b039390931692909217909155600255610165565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000806040838503121561013e57600080fd5b82516001600160a01b038116811461015557600080fd5b6020939093015192949293505050565b612462806101746000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063bf44ba6c11610071578063bf44ba6c1461018c578063cc0b713814610194578063cfda5478146101a7578063d09b6d43146101ba578063d1af0c7d146101cd578063f2fde38b146101e057600080fd5b8063344e5e34146100b95780636cf8caf8146100e9578063715018a6146101475780637572719e146101515780638da5cb5b14610164578063a0928c1114610175575b600080fd5b6100cc6100c7366004610bbc565b6101f3565b6040516001600160a01b0390911681526020015b60405180910390f35b6101226100f7366004610bf1565b6004602052600090815260409020805460018201546002909201546001600160a01b03909116919083565b604080516001600160a01b0390941684526020840192909252908201526060016100e0565b61014f61021d565b005b61014f61015f366004610c0c565b61025c565b6000546001600160a01b03166100cc565b61017e60025481565b6040519081526020016100e0565b61014f61029e565b61014f6101a2366004610bf1565b61038b565b61014f6101b5366004610c36565b6105fb565b61014f6101c8366004610c36565b61076f565b6001546100cc906001600160a01b031681565b61014f6101ee366004610bf1565b610828565b6003818154811061020357600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b031633146102505760405162461bcd60e51b815260040161024790610c69565b60405180910390fd5b61025a60006108bc565b565b6000546001600160a01b031633146102865760405162461bcd60e51b815260040161024790610c69565b61029a6001600160a01b038316338361090c565b5050565b6000546001600160a01b031633146102c85760405162461bcd60e51b815260040161024790610c69565b6003546103395760405162461bcd60e51b81526020600482015260446024820181905260008051602061240d833981519152908201527f7264416d6f756e74733a2063616c6c6564206265666f726520616e79206465706064820152636c6f797360e01b608482015260a401610247565b60005b600354811015610388576103766003828154811061035c5761035c610c9e565b6000918252602090912001546001600160a01b031661038b565b8061038081610cb4565b91505061033c565b50565b6000546001600160a01b031633146103b55760405162461bcd60e51b815260040161024790610c69565b6002544210156104105760405162461bcd60e51b8152602060048201526032602482015260008051602061240d833981519152604482015271393220b6b7bab73a1d103a37b79039b7b7b760711b6064820152608401610247565b6001600160a01b03808216600090815260046020526040902080549091166104875760405162461bcd60e51b8152602060048201526036602482015260008051602061240d8339815191526044820152751c99105b5bdd5b9d0e881b9bdd0819195c1b1bde595960521b6064820152608401610247565b6000816001015411801561049f575060008160020154115b1561029a57600181810180546002840180546000938490559290559154835460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810185905291169063a9059cbb906044016020604051808303816000875af115801561050d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105319190610cdd565b6105915760405162461bcd60e51b8152602060048201526039602482015260008051602061240d83398151915260448201527f7264416d6f756e743a207472616e73666572206661696c6564000000000000006064820152608401610247565b825460405163e5cd8a6f60e01b815260048101849052602481018390526001600160a01b039091169063e5cd8a6f90604401600060405180830381600087803b1580156105dd57600080fd5b505af11580156105f1573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146106255760405162461bcd60e51b815260040161024790610c69565b6001600160a01b0380841660009081526004602052604090208054909116156106a85760405162461bcd60e51b815260206004820152602f60248201527f5374616b696e6752657761726473466163746f72793a3a6465706c6f793a206160448201526e1b1c9958591e4819195c1b1bde5959608a1b6064820152608401610247565b60015460405130916001600160a01b03169086906106c590610baf565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f080158015610701573d6000803e3d6000fd5b5081546001600160a01b03199081166001600160a01b039283161783556001808401959095556002909201929092556003805493840181556000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b90920180549092169216919091179055565b6000546001600160a01b031633146107995760405162461bcd60e51b815260040161024790610c69565b6001600160a01b03808416600090815260046020526040902080549091166108175760405162461bcd60e51b815260206004820152602b60248201527f5374616b696e6752657761726473466163746f72793a3a7570646174653a206e60448201526a1bdd0819195c1b1bde595960aa1b6064820152608401610247565b600181019290925560029091015550565b6000546001600160a01b031633146108525760405162461bcd60e51b815260040161024790610c69565b6001600160a01b0381166108b75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610247565b610388815b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261095e908490610963565b505050565b60006109b8826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610a359092919063ffffffff16565b80519091501561095e57808060200190518101906109d69190610cdd565b61095e5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610247565b6060610a448484600085610a4e565b90505b9392505050565b606082471015610aaf5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610247565b843b610afd5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610247565b600080866001600160a01b03168587604051610b199190610d2f565b60006040518083038185875af1925050503d8060008114610b56576040519150601f19603f3d011682016040523d82523d6000602084013e610b5b565b606091505b5091509150610b6b828286610b76565b979650505050505050565b60608315610b85575081610a47565b825115610b955782518084602001fd5b8160405162461bcd60e51b81526004016102479190610d4b565b61168e80610d7f83390190565b600060208284031215610bce57600080fd5b5035919050565b80356001600160a01b0381168114610bec57600080fd5b919050565b600060208284031215610c0357600080fd5b610a4782610bd5565b60008060408385031215610c1f57600080fd5b610c2883610bd5565b946020939093013593505050565b600080600060608486031215610c4b57600080fd5b610c5484610bd5565b95602085013595506040909401359392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6000600019821415610cd657634e487b7160e01b600052601160045260246000fd5b5060010190565b600060208284031215610cef57600080fd5b81518015158114610a4757600080fd5b60005b83811015610d1a578181015183820152602001610d02565b83811115610d29576000848401525b50505050565b60008251610d41818460208701610cff565b9190910192915050565b6020815260008251806020840152610d6a816040850160208701610cff565b601f01601f1916919091016040019291505056fe60806040526000600555600060065562093a806007553480156200002257600080fd5b506040516200168e3803806200168e833981016040819052620000459162000109565b6001805562000054336200009a565b600380546001600160a01b039384166001600160a01b03199182161790915560048054928416928216929092179091556000805493909216921691909117905562000153565b600280546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b03811681146200010457600080fd5b919050565b6000806000606084860312156200011f57600080fd5b6200012a84620000ec565b92506200013a60208501620000ec565b91506200014a60408501620000ec565b90509250925092565b61152b80620001636000396000f3fe608060405234801561001057600080fd5b50600436106101d95760003560e01c80638da5cb5b11610104578063df136d65116100a2578063f2fde38b11610071578063f2fde38b146103c8578063f520e7e5146103db578063fa4ea2be146103e4578063fc2b8cc3146103ec57600080fd5b8063df136d6514610390578063e3e6cd1814610399578063e5cd8a6f146103ac578063ebe2b12b146103bf57600080fd5b8063c8f33c91116100de578063c8f33c9114610359578063cc1a378f14610362578063cd3daf9d14610375578063d1af0c7d1461037d57600080fd5b80638da5cb5b1461030c578063a694fc3a1461031d578063bfd837ac1461033057600080fd5b80634bb278f31161017c5780637b0a47ee1161014b5780637b0a47ee146102c857806380faa57d146102d15780638b876347146102d95780638c7283c6146102f957600080fd5b80634bb278f31461027c57806370a0823114610284578063715018a6146102ad57806372f702f3146102b557600080fd5b80631c1f78eb116101b85780631c1f78eb1461022c5780632e1a7d4d146102345780633d18b912146102495780633fc6df6e1461025157600080fd5b80628cc262146101de5780630700037d1461020457806318160ddd14610224575b600080fd5b6101f16101ec3660046112a1565b6103f4565b6040519081526020015b60405180910390f35b6101f16102123660046112a1565b600b6020526000908152604090205481565b600c546101f1565b6007546101f1565b6102476102423660046112bc565b610472565b005b610247610592565b600054610264906001600160a01b031681565b6040516001600160a01b0390911681526020016101fb565b61024761068e565b6101f16102923660046112a1565b6001600160a01b03166000908152600d602052604090205490565b6102476106c6565b600454610264906001600160a01b031681565b6101f160065481565b6101f16106fc565b6101f16102e73660046112a1565b600a6020526000908152604090205481565b6102476103073660046112d5565b61070f565b6002546001600160a01b0316610264565b61024761032b3660046112bc565b6108ab565b6101f161033e3660046112a1565b6001600160a01b03166000908152600e602052604090205490565b6101f160085481565b6102476103703660046112bc565b6109df565b6101f1610aa1565b600354610264906001600160a01b031681565b6101f160095481565b6102476103a7366004611301565b610aed565b6102476103ba36600461132b565b610b43565b6101f160055481565b6102476103d63660046112a1565b610dd7565b6101f160075481565b610247610e72565b610247610ed5565b6001600160a01b0381166000908152600b6020908152604080832054600a90925282205461046c919061046690670de0b6b3a764000090610460906104419061043b610aa1565b90610ef6565b6001600160a01b0388166000908152600d602052604090205490610f09565b90610f15565b90610f21565b92915050565b6002600154141561049e5760405162461bcd60e51b81526004016104959061134d565b60405180910390fd5b6002600155336104ac610aa1565b6009556104b76106fc565b6008556001600160a01b038116156104fe576104d2816103f4565b6001600160a01b0382166000908152600b6020908152604080832093909355600954600a909152919020555b600c5461050b9083610ef6565b600c55336000908152600d60205260409020546105289083610ef6565b336000818152600d6020526040902091909155600454610554916001600160a01b039091169084610f2d565b60405182815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5906020015b60405180910390a2505060018055565b600260015414156105b55760405162461bcd60e51b81526004016104959061134d565b6002600155336105c3610aa1565b6009556105ce6106fc565b6008556001600160a01b03811615610615576105e9816103f4565b6001600160a01b0382166000908152600b6020908152604080832093909355600954600a909152919020555b336000908152600b6020526040902054801561068657336000818152600b6020526040812055600354610654916001600160a01b039091169083610f2d565b60405181815233907fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e048690602001610582565b505060018055565b6002546001600160a01b031633146106b85760405162461bcd60e51b815260040161049590611384565b6002546001600160a01b0316ff5b6002546001600160a01b031633146106f05760405162461bcd60e51b815260040161049590611384565b6106fa6000610f95565b565b600061070a42600554610fe7565b905090565b600260015414156107325760405162461bcd60e51b81526004016104959061134d565b600260015580610740610aa1565b60095561074b6106fc565b6008556001600160a01b0381161561079257610766816103f4565b6001600160a01b0382166000908152600b6020908152604080832093909355600954600a909152919020555b6001600160a01b0382166000908152600d6020526040902054156107f15760405162461bcd60e51b815260206004820152601660248201527520b63932b0b23c9039ba30b5b2b210313c903ab9b2b960511b6044820152606401610495565b600c546107fe9084610f21565b600c556001600160a01b0382166000908152600d60205260409020546108249084610f21565b6001600160a01b038084166000908152600d6020908152604080832094909455600e90529182209190915560045461085f9116333086610ffd565b816001600160a01b03167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d8460405161089a91815260200190565b60405180910390a250506001805550565b600260015414156108ce5760405162461bcd60e51b81526004016104959061134d565b6002600155336108dc610aa1565b6009556108e76106fc565b6008556001600160a01b0381161561092e57610902816103f4565b6001600160a01b0382166000908152600b6020908152604080832093909355600954600a909152919020555b336000908152600e60205260409020541561094857600080fd5b600c546109559083610f21565b600c55336000908152600d60205260409020546109729083610f21565b336000818152600d6020908152604080832094909455600e9052918220919091556004546109ad916001600160a01b03909116903085610ffd565b60405182815233907f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d90602001610582565b6002546001600160a01b03163314610a095760405162461bcd60e51b815260040161049590611384565b600554421015610a665760405162461bcd60e51b815260206004820152602260248201527f4578697374696e67207265776172647320706572696f6420696e636f6d706c65604482015261746560f01b6064820152608401610495565b60078190556040518181527ffeece2f615b2fecca6c26deadea49416a6ba6b52b2cd2613065fd6a787cf12409060200160405180910390a150565b6000600c5460001415610ab5575060095490565b61070a610ae4600554610460670de0b6b3a7640000610ade600654610ade60085461043b6106fc565b90610f09565b60095490610f21565b6002546001600160a01b03163314610b175760405162461bcd60e51b815260040161049590611384565b610b3f30610b2d6002546001600160a01b031690565b6001600160a01b038516919084610ffd565b5050565b6000546001600160a01b03163314610ba75760405162461bcd60e51b815260206004820152602160248201527f43616c6c6572206973206e6f742052657761726473446973747269627574696f6044820152603760f91b6064820152608401610495565b6000610bb1610aa1565b600955610bbc6106fc565b6008556001600160a01b03811615610c0357610bd7816103f4565b6001600160a01b0382166000908152600b6020908152604080832093909355600954600a909152919020555b600554610c104284610f21565b1015610c5e5760405162461bcd60e51b815260206004820152601d60248201527f43616e6e6f7420726564756365206578697374696e6720706572696f640000006044820152606401610495565b6005544210610c7957610c718383610f15565b600655610cb8565b600554600090610c899042610ef6565b90506000610ca260065483610f0990919063ffffffff16565b9050610cb2846104608784610f21565b60065550505b6003546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610d01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2591906113b9565b9050610d318184610f15565b6006541115610d825760405162461bcd60e51b815260206004820152601860248201527f50726f76696465642072657761726420746f6f206869676800000000000000006044820152606401610495565b426008819055610d929084610f21565b60058190556040805186815260208101929092527f6c07ee05dcf262f13abf9d87b846ee789d2f90fe991d495acd7d7fc109ee1f55910160405180910390a150505050565b6002546001600160a01b03163314610e015760405162461bcd60e51b815260040161049590611384565b6001600160a01b038116610e665760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610495565b610e6f81610f95565b50565b6002546001600160a01b03163314610e9c5760405162461bcd60e51b815260040161049590611384565b6002546040516001600160a01b03909116904780156108fc02916000818181858888f19350505050158015610e6f573d6000803e3d6000fd5b336000908152600d6020526040902054610eee90610472565b6106fa610592565b6000610f0282846113e8565b9392505050565b6000610f0282846113ff565b6000610f02828461141e565b6000610f028284611440565b6040516001600160a01b038316602482015260448101829052610f9090849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261103b565b505050565b600280546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000818310610ff65781610f02565b5090919050565b6040516001600160a01b03808516602483015283166044820152606481018290526110359085906323b872dd60e01b90608401610f59565b50505050565b6000611090826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661110d9092919063ffffffff16565b805190915015610f9057808060200190518101906110ae9190611458565b610f905760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610495565b606061111c8484600085611124565b949350505050565b6060824710156111855760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610495565b843b6111d35760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610495565b600080866001600160a01b031685876040516111ef91906114a6565b60006040518083038185875af1925050503d806000811461122c576040519150601f19603f3d011682016040523d82523d6000602084013e611231565b606091505b509150915061124182828661124c565b979650505050505050565b6060831561125b575081610f02565b82511561126b5782518084602001fd5b8160405162461bcd60e51b815260040161049591906114c2565b80356001600160a01b038116811461129c57600080fd5b919050565b6000602082840312156112b357600080fd5b610f0282611285565b6000602082840312156112ce57600080fd5b5035919050565b600080604083850312156112e857600080fd5b823591506112f860208401611285565b90509250929050565b6000806040838503121561131457600080fd5b61131d83611285565b946020939093013593505050565b6000806040838503121561133e57600080fd5b50508035926020909101359150565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156113cb57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000828210156113fa576113fa6113d2565b500390565b6000816000190483118215151615611419576114196113d2565b500290565b60008261143b57634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115611453576114536113d2565b500190565b60006020828403121561146a57600080fd5b81518015158114610f0257600080fd5b60005b8381101561149557818101518382015260200161147d565b838111156110355750506000910152565b600082516114b881846020870161147a565b9190910192915050565b60208152600082518060208401526114e181604085016020870161147a565b601f01601f1916919091016040019291505056fea264697066735822122088a91332c91d2953c4a4b528e67935c71d48f0c81cec004e4904d95134e5eb8c64736f6c634300080b00335374616b696e6752657761726473466163746f72793a3a636c61696d52657761a264697066735822122011a66001a092834672398283c56b17e2081855901756c839d4a96ed29079012c64736f6c634300080b0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c8063bf44ba6c11610071578063bf44ba6c1461018c578063cc0b713814610194578063cfda5478146101a7578063d09b6d43146101ba578063d1af0c7d146101cd578063f2fde38b146101e057600080fd5b8063344e5e34146100b95780636cf8caf8146100e9578063715018a6146101475780637572719e146101515780638da5cb5b14610164578063a0928c1114610175575b600080fd5b6100cc6100c7366004610bbc565b6101f3565b6040516001600160a01b0390911681526020015b60405180910390f35b6101226100f7366004610bf1565b6004602052600090815260409020805460018201546002909201546001600160a01b03909116919083565b604080516001600160a01b0390941684526020840192909252908201526060016100e0565b61014f61021d565b005b61014f61015f366004610c0c565b61025c565b6000546001600160a01b03166100cc565b61017e60025481565b6040519081526020016100e0565b61014f61029e565b61014f6101a2366004610bf1565b61038b565b61014f6101b5366004610c36565b6105fb565b61014f6101c8366004610c36565b61076f565b6001546100cc906001600160a01b031681565b61014f6101ee366004610bf1565b610828565b6003818154811061020357600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b031633146102505760405162461bcd60e51b815260040161024790610c69565b60405180910390fd5b61025a60006108bc565b565b6000546001600160a01b031633146102865760405162461bcd60e51b815260040161024790610c69565b61029a6001600160a01b038316338361090c565b5050565b6000546001600160a01b031633146102c85760405162461bcd60e51b815260040161024790610c69565b6003546103395760405162461bcd60e51b81526020600482015260446024820181905260008051602061240d833981519152908201527f7264416d6f756e74733a2063616c6c6564206265666f726520616e79206465706064820152636c6f797360e01b608482015260a401610247565b60005b600354811015610388576103766003828154811061035c5761035c610c9e565b6000918252602090912001546001600160a01b031661038b565b8061038081610cb4565b91505061033c565b50565b6000546001600160a01b031633146103b55760405162461bcd60e51b815260040161024790610c69565b6002544210156104105760405162461bcd60e51b8152602060048201526032602482015260008051602061240d833981519152604482015271393220b6b7bab73a1d103a37b79039b7b7b760711b6064820152608401610247565b6001600160a01b03808216600090815260046020526040902080549091166104875760405162461bcd60e51b8152602060048201526036602482015260008051602061240d8339815191526044820152751c99105b5bdd5b9d0e881b9bdd0819195c1b1bde595960521b6064820152608401610247565b6000816001015411801561049f575060008160020154115b1561029a57600181810180546002840180546000938490559290559154835460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810185905291169063a9059cbb906044016020604051808303816000875af115801561050d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105319190610cdd565b6105915760405162461bcd60e51b8152602060048201526039602482015260008051602061240d83398151915260448201527f7264416d6f756e743a207472616e73666572206661696c6564000000000000006064820152608401610247565b825460405163e5cd8a6f60e01b815260048101849052602481018390526001600160a01b039091169063e5cd8a6f90604401600060405180830381600087803b1580156105dd57600080fd5b505af11580156105f1573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146106255760405162461bcd60e51b815260040161024790610c69565b6001600160a01b0380841660009081526004602052604090208054909116156106a85760405162461bcd60e51b815260206004820152602f60248201527f5374616b696e6752657761726473466163746f72793a3a6465706c6f793a206160448201526e1b1c9958591e4819195c1b1bde5959608a1b6064820152608401610247565b60015460405130916001600160a01b03169086906106c590610baf565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f080158015610701573d6000803e3d6000fd5b5081546001600160a01b03199081166001600160a01b039283161783556001808401959095556002909201929092556003805493840181556000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b90920180549092169216919091179055565b6000546001600160a01b031633146107995760405162461bcd60e51b815260040161024790610c69565b6001600160a01b03808416600090815260046020526040902080549091166108175760405162461bcd60e51b815260206004820152602b60248201527f5374616b696e6752657761726473466163746f72793a3a7570646174653a206e60448201526a1bdd0819195c1b1bde595960aa1b6064820152608401610247565b600181019290925560029091015550565b6000546001600160a01b031633146108525760405162461bcd60e51b815260040161024790610c69565b6001600160a01b0381166108b75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610247565b610388815b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261095e908490610963565b505050565b60006109b8826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610a359092919063ffffffff16565b80519091501561095e57808060200190518101906109d69190610cdd565b61095e5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610247565b6060610a448484600085610a4e565b90505b9392505050565b606082471015610aaf5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610247565b843b610afd5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610247565b600080866001600160a01b03168587604051610b199190610d2f565b60006040518083038185875af1925050503d8060008114610b56576040519150601f19603f3d011682016040523d82523d6000602084013e610b5b565b606091505b5091509150610b6b828286610b76565b979650505050505050565b60608315610b85575081610a47565b825115610b955782518084602001fd5b8160405162461bcd60e51b81526004016102479190610d4b565b61168e80610d7f83390190565b600060208284031215610bce57600080fd5b5035919050565b80356001600160a01b0381168114610bec57600080fd5b919050565b600060208284031215610c0357600080fd5b610a4782610bd5565b60008060408385031215610c1f57600080fd5b610c2883610bd5565b946020939093013593505050565b600080600060608486031215610c4b57600080fd5b610c5484610bd5565b95602085013595506040909401359392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6000600019821415610cd657634e487b7160e01b600052601160045260246000fd5b5060010190565b600060208284031215610cef57600080fd5b81518015158114610a4757600080fd5b60005b83811015610d1a578181015183820152602001610d02565b83811115610d29576000848401525b50505050565b60008251610d41818460208701610cff565b9190910192915050565b6020815260008251806020840152610d6a816040850160208701610cff565b601f01601f1916919091016040019291505056fe60806040526000600555600060065562093a806007553480156200002257600080fd5b506040516200168e3803806200168e833981016040819052620000459162000109565b6001805562000054336200009a565b600380546001600160a01b039384166001600160a01b03199182161790915560048054928416928216929092179091556000805493909216921691909117905562000153565b600280546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b03811681146200010457600080fd5b919050565b6000806000606084860312156200011f57600080fd5b6200012a84620000ec565b92506200013a60208501620000ec565b91506200014a60408501620000ec565b90509250925092565b61152b80620001636000396000f3fe608060405234801561001057600080fd5b50600436106101d95760003560e01c80638da5cb5b11610104578063df136d65116100a2578063f2fde38b11610071578063f2fde38b146103c8578063f520e7e5146103db578063fa4ea2be146103e4578063fc2b8cc3146103ec57600080fd5b8063df136d6514610390578063e3e6cd1814610399578063e5cd8a6f146103ac578063ebe2b12b146103bf57600080fd5b8063c8f33c91116100de578063c8f33c9114610359578063cc1a378f14610362578063cd3daf9d14610375578063d1af0c7d1461037d57600080fd5b80638da5cb5b1461030c578063a694fc3a1461031d578063bfd837ac1461033057600080fd5b80634bb278f31161017c5780637b0a47ee1161014b5780637b0a47ee146102c857806380faa57d146102d15780638b876347146102d95780638c7283c6146102f957600080fd5b80634bb278f31461027c57806370a0823114610284578063715018a6146102ad57806372f702f3146102b557600080fd5b80631c1f78eb116101b85780631c1f78eb1461022c5780632e1a7d4d146102345780633d18b912146102495780633fc6df6e1461025157600080fd5b80628cc262146101de5780630700037d1461020457806318160ddd14610224575b600080fd5b6101f16101ec3660046112a1565b6103f4565b6040519081526020015b60405180910390f35b6101f16102123660046112a1565b600b6020526000908152604090205481565b600c546101f1565b6007546101f1565b6102476102423660046112bc565b610472565b005b610247610592565b600054610264906001600160a01b031681565b6040516001600160a01b0390911681526020016101fb565b61024761068e565b6101f16102923660046112a1565b6001600160a01b03166000908152600d602052604090205490565b6102476106c6565b600454610264906001600160a01b031681565b6101f160065481565b6101f16106fc565b6101f16102e73660046112a1565b600a6020526000908152604090205481565b6102476103073660046112d5565b61070f565b6002546001600160a01b0316610264565b61024761032b3660046112bc565b6108ab565b6101f161033e3660046112a1565b6001600160a01b03166000908152600e602052604090205490565b6101f160085481565b6102476103703660046112bc565b6109df565b6101f1610aa1565b600354610264906001600160a01b031681565b6101f160095481565b6102476103a7366004611301565b610aed565b6102476103ba36600461132b565b610b43565b6101f160055481565b6102476103d63660046112a1565b610dd7565b6101f160075481565b610247610e72565b610247610ed5565b6001600160a01b0381166000908152600b6020908152604080832054600a90925282205461046c919061046690670de0b6b3a764000090610460906104419061043b610aa1565b90610ef6565b6001600160a01b0388166000908152600d602052604090205490610f09565b90610f15565b90610f21565b92915050565b6002600154141561049e5760405162461bcd60e51b81526004016104959061134d565b60405180910390fd5b6002600155336104ac610aa1565b6009556104b76106fc565b6008556001600160a01b038116156104fe576104d2816103f4565b6001600160a01b0382166000908152600b6020908152604080832093909355600954600a909152919020555b600c5461050b9083610ef6565b600c55336000908152600d60205260409020546105289083610ef6565b336000818152600d6020526040902091909155600454610554916001600160a01b039091169084610f2d565b60405182815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5906020015b60405180910390a2505060018055565b600260015414156105b55760405162461bcd60e51b81526004016104959061134d565b6002600155336105c3610aa1565b6009556105ce6106fc565b6008556001600160a01b03811615610615576105e9816103f4565b6001600160a01b0382166000908152600b6020908152604080832093909355600954600a909152919020555b336000908152600b6020526040902054801561068657336000818152600b6020526040812055600354610654916001600160a01b039091169083610f2d565b60405181815233907fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e048690602001610582565b505060018055565b6002546001600160a01b031633146106b85760405162461bcd60e51b815260040161049590611384565b6002546001600160a01b0316ff5b6002546001600160a01b031633146106f05760405162461bcd60e51b815260040161049590611384565b6106fa6000610f95565b565b600061070a42600554610fe7565b905090565b600260015414156107325760405162461bcd60e51b81526004016104959061134d565b600260015580610740610aa1565b60095561074b6106fc565b6008556001600160a01b0381161561079257610766816103f4565b6001600160a01b0382166000908152600b6020908152604080832093909355600954600a909152919020555b6001600160a01b0382166000908152600d6020526040902054156107f15760405162461bcd60e51b815260206004820152601660248201527520b63932b0b23c9039ba30b5b2b210313c903ab9b2b960511b6044820152606401610495565b600c546107fe9084610f21565b600c556001600160a01b0382166000908152600d60205260409020546108249084610f21565b6001600160a01b038084166000908152600d6020908152604080832094909455600e90529182209190915560045461085f9116333086610ffd565b816001600160a01b03167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d8460405161089a91815260200190565b60405180910390a250506001805550565b600260015414156108ce5760405162461bcd60e51b81526004016104959061134d565b6002600155336108dc610aa1565b6009556108e76106fc565b6008556001600160a01b0381161561092e57610902816103f4565b6001600160a01b0382166000908152600b6020908152604080832093909355600954600a909152919020555b336000908152600e60205260409020541561094857600080fd5b600c546109559083610f21565b600c55336000908152600d60205260409020546109729083610f21565b336000818152600d6020908152604080832094909455600e9052918220919091556004546109ad916001600160a01b03909116903085610ffd565b60405182815233907f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d90602001610582565b6002546001600160a01b03163314610a095760405162461bcd60e51b815260040161049590611384565b600554421015610a665760405162461bcd60e51b815260206004820152602260248201527f4578697374696e67207265776172647320706572696f6420696e636f6d706c65604482015261746560f01b6064820152608401610495565b60078190556040518181527ffeece2f615b2fecca6c26deadea49416a6ba6b52b2cd2613065fd6a787cf12409060200160405180910390a150565b6000600c5460001415610ab5575060095490565b61070a610ae4600554610460670de0b6b3a7640000610ade600654610ade60085461043b6106fc565b90610f09565b60095490610f21565b6002546001600160a01b03163314610b175760405162461bcd60e51b815260040161049590611384565b610b3f30610b2d6002546001600160a01b031690565b6001600160a01b038516919084610ffd565b5050565b6000546001600160a01b03163314610ba75760405162461bcd60e51b815260206004820152602160248201527f43616c6c6572206973206e6f742052657761726473446973747269627574696f6044820152603760f91b6064820152608401610495565b6000610bb1610aa1565b600955610bbc6106fc565b6008556001600160a01b03811615610c0357610bd7816103f4565b6001600160a01b0382166000908152600b6020908152604080832093909355600954600a909152919020555b600554610c104284610f21565b1015610c5e5760405162461bcd60e51b815260206004820152601d60248201527f43616e6e6f7420726564756365206578697374696e6720706572696f640000006044820152606401610495565b6005544210610c7957610c718383610f15565b600655610cb8565b600554600090610c899042610ef6565b90506000610ca260065483610f0990919063ffffffff16565b9050610cb2846104608784610f21565b60065550505b6003546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610d01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2591906113b9565b9050610d318184610f15565b6006541115610d825760405162461bcd60e51b815260206004820152601860248201527f50726f76696465642072657761726420746f6f206869676800000000000000006044820152606401610495565b426008819055610d929084610f21565b60058190556040805186815260208101929092527f6c07ee05dcf262f13abf9d87b846ee789d2f90fe991d495acd7d7fc109ee1f55910160405180910390a150505050565b6002546001600160a01b03163314610e015760405162461bcd60e51b815260040161049590611384565b6001600160a01b038116610e665760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610495565b610e6f81610f95565b50565b6002546001600160a01b03163314610e9c5760405162461bcd60e51b815260040161049590611384565b6002546040516001600160a01b03909116904780156108fc02916000818181858888f19350505050158015610e6f573d6000803e3d6000fd5b336000908152600d6020526040902054610eee90610472565b6106fa610592565b6000610f0282846113e8565b9392505050565b6000610f0282846113ff565b6000610f02828461141e565b6000610f028284611440565b6040516001600160a01b038316602482015260448101829052610f9090849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261103b565b505050565b600280546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000818310610ff65781610f02565b5090919050565b6040516001600160a01b03808516602483015283166044820152606481018290526110359085906323b872dd60e01b90608401610f59565b50505050565b6000611090826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661110d9092919063ffffffff16565b805190915015610f9057808060200190518101906110ae9190611458565b610f905760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610495565b606061111c8484600085611124565b949350505050565b6060824710156111855760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610495565b843b6111d35760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610495565b600080866001600160a01b031685876040516111ef91906114a6565b60006040518083038185875af1925050503d806000811461122c576040519150601f19603f3d011682016040523d82523d6000602084013e611231565b606091505b509150915061124182828661124c565b979650505050505050565b6060831561125b575081610f02565b82511561126b5782518084602001fd5b8160405162461bcd60e51b815260040161049591906114c2565b80356001600160a01b038116811461129c57600080fd5b919050565b6000602082840312156112b357600080fd5b610f0282611285565b6000602082840312156112ce57600080fd5b5035919050565b600080604083850312156112e857600080fd5b823591506112f860208401611285565b90509250929050565b6000806040838503121561131457600080fd5b61131d83611285565b946020939093013593505050565b6000806040838503121561133e57600080fd5b50508035926020909101359150565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156113cb57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000828210156113fa576113fa6113d2565b500390565b6000816000190483118215151615611419576114196113d2565b500290565b60008261143b57634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115611453576114536113d2565b500190565b60006020828403121561146a57600080fd5b81518015158114610f0257600080fd5b60005b8381101561149557818101518382015260200161147d565b838111156110355750506000910152565b600082516114b881846020870161147a565b9190910192915050565b60208152600082518060208401526114e181604085016020870161147a565b601f01601f1916919091016040019291505056fea264697066735822122088a91332c91d2953c4a4b528e67935c71d48f0c81cec004e4904d95134e5eb8c64736f6c634300080b00335374616b696e6752657761726473466163746f72793a3a636c61696d52657761a264697066735822122011a66001a092834672398283c56b17e2081855901756c839d4a96ed29079012c64736f6c634300080b0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:788:12",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:12",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "112:253:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "158:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "167:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "170:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "160:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "160:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "160:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "133:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "142:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "129:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "129:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "154:2:12",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "125:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "125:32:12"
                  },
                  "nodeType": "YulIf",
                  "src": "122:52:12"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "183:29:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "202:9:12"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "196:5:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "196:16:12"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "187:5:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "275:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "284:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "287:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "277:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "277:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "277:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "234:5:12"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "245:5:12"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "260:3:12",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "265:1:12",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "256:3:12"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "256:11:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "269:1:12",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "252:3:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "252:19:12"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "241:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "241:31:12"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "231:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "231:42:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "224:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "224:50:12"
                  },
                  "nodeType": "YulIf",
                  "src": "221:70:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "300:15:12",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "310:5:12"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "300:6:12"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "324:35:12",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "344:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "355:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "340:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "340:18:12"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "334:5:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "334:25:12"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "324:6:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "70:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "81:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "93:6:12",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "101:6:12",
                "type": ""
              }
            ],
            "src": "14:351:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "544:242:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "561:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "572:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "554:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "554:21:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "554:21:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "595:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "606:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "591:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "591:18:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "611:2:12",
                        "type": "",
                        "value": "52"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "584:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "584:30:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "584:30:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "634:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "645:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "630:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "630:18:12"
                      },
                      {
                        "hexValue": "5374616b696e6752657761726473466163746f72793a3a636f6e737472756374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "650:34:12",
                        "type": "",
                        "value": "StakingRewardsFactory::construct"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "623:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "623:62:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "623:62:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "705:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "716:2:12",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "701:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "701:18:12"
                      },
                      {
                        "hexValue": "6f723a2067656e6573697320746f6f20736f6f6e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "721:22:12",
                        "type": "",
                        "value": "or: genesis too soon"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "694:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "694:50:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "694:50:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "753:27:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "765:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "776:3:12",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "761:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "761:19:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "753:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f22e14100106eb9f2180e576eda6e762fdcbd26e14106a6823275a3b8fdea515__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "521:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "535:4:12",
                "type": ""
              }
            ],
            "src": "370:416:12"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        value1 := mload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_f22e14100106eb9f2180e576eda6e762fdcbd26e14106a6823275a3b8fdea515__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"StakingRewardsFactory::construct\")\n        mstore(add(headStart, 96), \"or: genesis too soon\")\n        tail := add(headStart, 128)\n    }\n}",
      "id": 12,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:8910:12",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:12",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:110:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "139:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "142:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:12"
                  },
                  "nodeType": "YulIf",
                  "src": "94:52:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "155:33:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "178:9:12"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "165:12:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "165:23:12"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "155:6:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:12",
                "type": ""
              }
            ],
            "src": "14:180:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:102:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "310:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "322:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "333:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "318:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "318:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "310:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "352:9:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "367:6:12"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "383:3:12",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "388:1:12",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "379:3:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "379:11:12"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "392:1:12",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "375:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "375:19:12"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "363:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "363:32:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "345:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "345:51:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "345:51:12"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "269:9:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "280:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "291:4:12",
                "type": ""
              }
            ],
            "src": "199:203:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "456:124:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "466:29:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "488:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "475:12:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "475:20:12"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "466:5:12"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "558:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "567:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "570:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "560:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "560:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "560:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "517:5:12"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "528:5:12"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "543:3:12",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "548:1:12",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "539:3:12"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "539:11:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "552:1:12",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "535:3:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "535:19:12"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "524:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "524:31:12"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "514:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "514:42:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "507:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "507:50:12"
                  },
                  "nodeType": "YulIf",
                  "src": "504:70:12"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "435:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "446:5:12",
                "type": ""
              }
            ],
            "src": "407:173:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "655:116:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "701:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "710:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "713:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "703:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "703:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "703:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "676:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "685:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "672:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "672:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "697:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "668:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "668:32:12"
                  },
                  "nodeType": "YulIf",
                  "src": "665:52:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "726:39:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "755:9:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "736:18:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "736:29:12"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "726:6:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "621:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "632:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "644:6:12",
                "type": ""
              }
            ],
            "src": "585:186:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "933:188:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "943:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "955:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "966:2:12",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "951:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "951:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "943:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "985:9:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1000:6:12"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1016:3:12",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1021:1:12",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1012:3:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1012:11:12"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1025:1:12",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1008:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1008:19:12"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "996:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "996:32:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "978:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "978:51:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "978:51:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1049:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1060:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1045:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1045:18:12"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1065:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1038:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1038:34:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1038:34:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1092:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1103:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1088:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1088:18:12"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "1108:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1081:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1081:34:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1081:34:12"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "886:9:12",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "897:6:12",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "905:6:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "913:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "924:4:12",
                "type": ""
              }
            ],
            "src": "776:345:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1213:167:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1259:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1268:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1271:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1261:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1261:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1261:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1234:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1243:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1230:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1230:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1255:2:12",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1226:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1226:32:12"
                  },
                  "nodeType": "YulIf",
                  "src": "1223:52:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1284:39:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1313:9:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1294:18:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1294:29:12"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1284:6:12"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1332:42:12",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1359:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1370:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1355:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1355:18:12"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1342:12:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1342:32:12"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1332:6:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1171:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1182:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1194:6:12",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1202:6:12",
                "type": ""
              }
            ],
            "src": "1126:254:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1486:76:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1496:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1508:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1519:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1504:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1504:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1496:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1538:9:12"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1549:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1531:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1531:25:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1531:25:12"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1455:9:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1466:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1477:4:12",
                "type": ""
              }
            ],
            "src": "1385:177:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1671:218:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1717:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1726:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1729:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1719:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1719:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1719:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1692:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1701:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1688:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1688:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1713:2:12",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1684:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1684:32:12"
                  },
                  "nodeType": "YulIf",
                  "src": "1681:52:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1742:39:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1771:9:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1752:18:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1752:29:12"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1742:6:12"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1790:42:12",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1817:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1828:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1813:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1813:18:12"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1800:12:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1800:32:12"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1790:6:12"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1841:42:12",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1868:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1879:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1864:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1864:18:12"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1851:12:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1851:32:12"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1841:6:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1621:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1632:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1644:6:12",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1652:6:12",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1660:6:12",
                "type": ""
              }
            ],
            "src": "1567:322:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2068:182:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2085:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2096:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2078:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2078:21:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2078:21:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2119:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2130:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2115:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2115:18:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2135:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2108:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2108:30:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2108:30:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2158:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2169:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2154:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2154:18:12"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2174:34:12",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2147:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2147:62:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2147:62:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2218:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2230:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2241:2:12",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2226:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2226:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2218:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2045:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2059:4:12",
                "type": ""
              }
            ],
            "src": "1894:356:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2429:298:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2446:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2457:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2439:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2439:21:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2439:21:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2480:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2491:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2476:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2476:18:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2496:2:12",
                        "type": "",
                        "value": "68"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2469:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2469:30:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2469:30:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2519:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2530:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2515:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2515:18:12"
                      },
                      {
                        "hexValue": "5374616b696e6752657761726473466163746f72793a3a636c61696d52657761",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2535:34:12",
                        "type": "",
                        "value": "StakingRewardsFactory::claimRewa"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2508:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2508:62:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2508:62:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2590:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2601:2:12",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2586:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2586:18:12"
                      },
                      {
                        "hexValue": "7264416d6f756e74733a2063616c6c6564206265666f726520616e7920646570",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2606:34:12",
                        "type": "",
                        "value": "rdAmounts: called before any dep"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2579:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2579:62:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2579:62:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2661:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2672:3:12",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2657:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2657:19:12"
                      },
                      {
                        "hexValue": "6c6f7973",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2678:6:12",
                        "type": "",
                        "value": "loys"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2650:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2650:35:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2650:35:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2694:27:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2706:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2717:3:12",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2702:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2702:19:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2694:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e0bd7787e67b6d58949cce0263a4e9f3ec69a807c23e665463c6edda538d1836__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2406:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2420:4:12",
                "type": ""
              }
            ],
            "src": "2255:472:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2764:95:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2781:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2788:3:12",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2793:10:12",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "2784:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2784:20:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2774:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2774:31:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2774:31:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2821:1:12",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2824:4:12",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2814:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2814:15:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2814:15:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2845:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2848:4:12",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2838:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2838:15:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2838:15:12"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "2732:127:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2911:185:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2950:111:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2971:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2978:3:12",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2983:10:12",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "2974:3:12"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2974:20:12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2964:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2964:31:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2964:31:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3015:1:12",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3018:4:12",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3008:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3008:15:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3008:15:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3043:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3046:4:12",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3036:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3036:15:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3036:15:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2927:5:12"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2938:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "2934:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2934:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "2924:2:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2924:17:12"
                  },
                  "nodeType": "YulIf",
                  "src": "2921:140:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3070:20:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3081:5:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3088:1:12",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3077:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3077:13:12"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "3070:3:12"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2893:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "2903:3:12",
                "type": ""
              }
            ],
            "src": "2864:232:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3275:240:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3292:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3303:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3285:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3285:21:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3285:21:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3326:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3337:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3322:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3322:18:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3342:2:12",
                        "type": "",
                        "value": "50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3315:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3315:30:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3315:30:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3365:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3376:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3361:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3361:18:12"
                      },
                      {
                        "hexValue": "5374616b696e6752657761726473466163746f72793a3a636c61696d52657761",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3381:34:12",
                        "type": "",
                        "value": "StakingRewardsFactory::claimRewa"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3354:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3354:62:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3354:62:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3436:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3447:2:12",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3432:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3432:18:12"
                      },
                      {
                        "hexValue": "7264416d6f756e743a20746f6f20736f6f6e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3452:20:12",
                        "type": "",
                        "value": "rdAmount: too soon"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3425:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3425:48:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3425:48:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3482:27:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3494:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3505:3:12",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3490:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3490:19:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3482:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_916e5dd87ddc58653085017fdc1077365484d358d0456882e4fc6ba909101e24__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3252:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3266:4:12",
                "type": ""
              }
            ],
            "src": "3101:414:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3694:244:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3711:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3722:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3704:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3704:21:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3704:21:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3745:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3756:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3741:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3741:18:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3761:2:12",
                        "type": "",
                        "value": "54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3734:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3734:30:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3734:30:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3784:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3795:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3780:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3780:18:12"
                      },
                      {
                        "hexValue": "5374616b696e6752657761726473466163746f72793a3a636c61696d52657761",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3800:34:12",
                        "type": "",
                        "value": "StakingRewardsFactory::claimRewa"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3773:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3773:62:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3773:62:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3855:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3866:2:12",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3851:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3851:18:12"
                      },
                      {
                        "hexValue": "7264416d6f756e743a206e6f74206465706c6f796564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3871:24:12",
                        "type": "",
                        "value": "rdAmount: not deployed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3844:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3844:52:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3844:52:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3905:27:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3917:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3928:3:12",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3913:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3913:19:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3905:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_22bfc8d55e681659d9ff180bcf801d6948db86e70b2d68ffccbdc7deaeaa8054__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3671:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3685:4:12",
                "type": ""
              }
            ],
            "src": "3520:418:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4072:145:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4082:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4094:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4105:2:12",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4090:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4090:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4082:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4124:9:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4139:6:12"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4155:3:12",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4160:1:12",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "4151:3:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4151:11:12"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4164:1:12",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4147:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4147:19:12"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4135:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4135:32:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4117:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4117:51:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4117:51:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4188:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4199:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4184:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4184:18:12"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4204:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4177:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4177:34:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4177:34:12"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4033:9:12",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4044:6:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4052:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4063:4:12",
                "type": ""
              }
            ],
            "src": "3943:274:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4300:199:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4346:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4355:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4358:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4348:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4348:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4348:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4321:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4330:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4317:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4317:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4342:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4313:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4313:32:12"
                  },
                  "nodeType": "YulIf",
                  "src": "4310:52:12"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4371:29:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4390:9:12"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4384:5:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4384:16:12"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4375:5:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4453:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4462:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4465:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4455:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4455:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4455:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4422:5:12"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "4443:5:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "4436:6:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4436:13:12"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "4429:6:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4429:21:12"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "4419:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4419:32:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4412:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4412:40:12"
                  },
                  "nodeType": "YulIf",
                  "src": "4409:60:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4478:15:12",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4488:5:12"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4478:6:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4266:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4277:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4289:6:12",
                "type": ""
              }
            ],
            "src": "4222:277:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4678:247:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4695:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4706:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4688:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4688:21:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4688:21:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4729:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4740:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4725:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4725:18:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4745:2:12",
                        "type": "",
                        "value": "57"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4718:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4718:30:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4718:30:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4768:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4779:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4764:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4764:18:12"
                      },
                      {
                        "hexValue": "5374616b696e6752657761726473466163746f72793a3a636c61696d52657761",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4784:34:12",
                        "type": "",
                        "value": "StakingRewardsFactory::claimRewa"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4757:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4757:62:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4757:62:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4839:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4850:2:12",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4835:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4835:18:12"
                      },
                      {
                        "hexValue": "7264416d6f756e743a207472616e73666572206661696c6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4855:27:12",
                        "type": "",
                        "value": "rdAmount: transfer failed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4828:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4828:55:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4828:55:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4892:27:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4904:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4915:3:12",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4900:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4900:19:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4892:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4555184ce2735e9f8f4ecda088b7cd7226994771f64184a83505686113a49797__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4655:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4669:4:12",
                "type": ""
              }
            ],
            "src": "4504:421:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5059:119:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5069:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5081:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5092:2:12",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5077:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5077:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5069:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5111:9:12"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5122:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5104:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5104:25:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5104:25:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5149:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5160:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5145:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5145:18:12"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5165:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5138:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5138:34:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5138:34:12"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5020:9:12",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5031:6:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5039:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5050:4:12",
                "type": ""
              }
            ],
            "src": "4930:248:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5357:237:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5374:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5385:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5367:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5367:21:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5367:21:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5408:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5419:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5404:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5404:18:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5424:2:12",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5397:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5397:30:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5397:30:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5447:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5458:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5443:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5443:18:12"
                      },
                      {
                        "hexValue": "5374616b696e6752657761726473466163746f72793a3a6465706c6f793a2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5463:34:12",
                        "type": "",
                        "value": "StakingRewardsFactory::deploy: a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5436:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5436:62:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5436:62:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5518:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5529:2:12",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5514:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5514:18:12"
                      },
                      {
                        "hexValue": "6c7265616479206465706c6f796564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5534:17:12",
                        "type": "",
                        "value": "lready deployed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5507:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5507:45:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5507:45:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5561:27:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5573:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5584:3:12",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5569:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5569:19:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5561:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_77d8567a7b7bf9a9a30ea727f6e525cae6667d736cdaff555c86db8d81648a1a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5334:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5348:4:12",
                "type": ""
              }
            ],
            "src": "5183:411:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5756:227:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5766:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5778:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5789:2:12",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5774:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5774:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5766:4:12"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5801:29:12",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5819:3:12",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5824:1:12",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "5815:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5815:11:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5828:1:12",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "5811:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5811:19:12"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "5805:2:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5846:9:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5861:6:12"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5869:2:12"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5857:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5857:15:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5839:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5839:34:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5839:34:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5893:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5904:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5889:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5889:18:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "5913:6:12"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5921:2:12"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5909:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5909:15:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5882:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5882:43:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5882:43:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5945:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5956:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5941:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5941:18:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "5965:6:12"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5973:2:12"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5961:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5961:15:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5934:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5934:43:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5934:43:12"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5709:9:12",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5720:6:12",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5728:6:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5736:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5747:4:12",
                "type": ""
              }
            ],
            "src": "5599:384:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6162:233:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6179:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6190:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6172:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6172:21:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6172:21:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6213:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6224:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6209:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6209:18:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6229:2:12",
                        "type": "",
                        "value": "43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6202:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6202:30:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6202:30:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6252:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6263:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6248:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6248:18:12"
                      },
                      {
                        "hexValue": "5374616b696e6752657761726473466163746f72793a3a7570646174653a206e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6268:34:12",
                        "type": "",
                        "value": "StakingRewardsFactory::update: n"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6241:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6241:62:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6241:62:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6323:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6334:2:12",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6319:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6319:18:12"
                      },
                      {
                        "hexValue": "6f74206465706c6f796564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6339:13:12",
                        "type": "",
                        "value": "ot deployed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6312:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6312:41:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6312:41:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6362:27:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6374:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6385:3:12",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6370:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6370:19:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6362:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_2680931cb8d2562eb985862b2b0f9b8f59411984dfac76c0f3e1c1ba0c024efb__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6139:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6153:4:12",
                "type": ""
              }
            ],
            "src": "5988:407:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6574:228:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6591:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6602:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6584:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6584:21:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6584:21:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6625:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6636:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6621:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6621:18:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6641:2:12",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6614:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6614:30:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6614:30:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6664:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6675:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6660:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6660:18:12"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6680:34:12",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6653:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6653:62:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6653:62:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6735:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6746:2:12",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6731:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6731:18:12"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6751:8:12",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6724:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6724:36:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6724:36:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6769:27:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6781:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6792:3:12",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6777:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6777:19:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6769:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6551:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6565:4:12",
                "type": ""
              }
            ],
            "src": "6400:402:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6981:232:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6998:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7009:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6991:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6991:21:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6991:21:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7032:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7043:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7028:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7028:18:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7048:2:12",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7021:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7021:30:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7021:30:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7071:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7082:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7067:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7067:18:12"
                      },
                      {
                        "hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7087:34:12",
                        "type": "",
                        "value": "SafeERC20: ERC20 operation did n"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7060:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7060:62:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7060:62:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7142:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7153:2:12",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7138:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7138:18:12"
                      },
                      {
                        "hexValue": "6f742073756363656564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7158:12:12",
                        "type": "",
                        "value": "ot succeed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7131:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7131:40:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7131:40:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7180:27:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7192:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7203:3:12",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7188:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7188:19:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7180:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6958:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6972:4:12",
                "type": ""
              }
            ],
            "src": "6807:406:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7392:228:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7409:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7420:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7402:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7402:21:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7402:21:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7443:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7454:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7439:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7439:18:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7459:2:12",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7432:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7432:30:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7432:30:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7482:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7493:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7478:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7478:18:12"
                      },
                      {
                        "hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7498:34:12",
                        "type": "",
                        "value": "Address: insufficient balance fo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7471:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7471:62:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7471:62:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7553:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7564:2:12",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7549:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7549:18:12"
                      },
                      {
                        "hexValue": "722063616c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7569:8:12",
                        "type": "",
                        "value": "r call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7542:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7542:36:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7542:36:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7587:27:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7599:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7610:3:12",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7595:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7595:19:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7587:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7369:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7383:4:12",
                "type": ""
              }
            ],
            "src": "7218:402:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7799:179:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7816:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7827:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7809:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7809:21:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7809:21:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7850:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7861:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7846:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7846:18:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7866:2:12",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7839:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7839:30:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7839:30:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7889:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7900:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7885:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7885:18:12"
                      },
                      {
                        "hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7905:31:12",
                        "type": "",
                        "value": "Address: call to non-contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7878:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7878:59:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7878:59:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7946:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7958:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7969:2:12",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7954:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7954:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7946:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7776:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7790:4:12",
                "type": ""
              }
            ],
            "src": "7625:353:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8036:205:12",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8046:10:12",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "8055:1:12",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "8050:1:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8115:63:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "8140:3:12"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "8145:1:12"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "8136:3:12"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8136:11:12"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "8159:3:12"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "8164:1:12"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "8155:3:12"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "8155:11:12"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "8149:5:12"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8149:18:12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "8129:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8129:39:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8129:39:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "8076:1:12"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8079:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "8073:2:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8073:13:12"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "8087:19:12",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "8089:15:12",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "8098:1:12"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8101:2:12",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "8094:3:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8094:10:12"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "8089:1:12"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "8069:3:12",
                    "statements": []
                  },
                  "src": "8065:113:12"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8204:31:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "8217:3:12"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "8222:6:12"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "8213:3:12"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8213:16:12"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8231:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "8206:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8206:27:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8206:27:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "8193:1:12"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8196:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "8190:2:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8190:13:12"
                  },
                  "nodeType": "YulIf",
                  "src": "8187:48:12"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "8014:3:12",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "8019:3:12",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "8024:6:12",
                "type": ""
              }
            ],
            "src": "7983:258:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8383:137:12",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8393:27:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8413:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8407:5:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8407:13:12"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "8397:6:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "8455:6:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8463:4:12",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8451:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8451:17:12"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8470:3:12"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8475:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "8429:21:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8429:53:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8429:53:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8491:23:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8502:3:12"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8507:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8498:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8498:16:12"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8491:3:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8359:3:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8364:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8375:3:12",
                "type": ""
              }
            ],
            "src": "8246:274:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8646:262:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8663:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8674:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8656:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8656:21:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8656:21:12"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8686:27:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8706:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8700:5:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8700:13:12"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "8690:6:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8733:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8744:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8729:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8729:18:12"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8749:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8722:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8722:34:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8722:34:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "8791:6:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8799:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8787:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8787:15:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8808:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8819:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8804:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8804:18:12"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8824:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "8765:21:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8765:66:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8765:66:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8840:62:12",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8856:9:12"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "8875:6:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8883:2:12",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8871:3:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8871:15:12"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8892:2:12",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "8888:3:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8888:7:12"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "8867:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8867:29:12"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8852:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8852:45:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8899:2:12",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8848:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8848:54:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8840:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8615:9:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8626:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8637:4:12",
                "type": ""
              }
            ],
            "src": "8525:383:12"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e0bd7787e67b6d58949cce0263a4e9f3ec69a807c23e665463c6edda538d1836__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 68)\n        mstore(add(headStart, 64), \"StakingRewardsFactory::claimRewa\")\n        mstore(add(headStart, 96), \"rdAmounts: called before any dep\")\n        mstore(add(headStart, 128), \"loys\")\n        tail := add(headStart, 160)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_916e5dd87ddc58653085017fdc1077365484d358d0456882e4fc6ba909101e24__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"StakingRewardsFactory::claimRewa\")\n        mstore(add(headStart, 96), \"rdAmount: too soon\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_22bfc8d55e681659d9ff180bcf801d6948db86e70b2d68ffccbdc7deaeaa8054__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 54)\n        mstore(add(headStart, 64), \"StakingRewardsFactory::claimRewa\")\n        mstore(add(headStart, 96), \"rdAmount: not deployed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_4555184ce2735e9f8f4ecda088b7cd7226994771f64184a83505686113a49797__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 57)\n        mstore(add(headStart, 64), \"StakingRewardsFactory::claimRewa\")\n        mstore(add(headStart, 96), \"rdAmount: transfer failed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_77d8567a7b7bf9a9a30ea727f6e525cae6667d736cdaff555c86db8d81648a1a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"StakingRewardsFactory::deploy: a\")\n        mstore(add(headStart, 96), \"lready deployed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_2680931cb8d2562eb985862b2b0f9b8f59411984dfac76c0f3e1c1ba0c024efb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"StakingRewardsFactory::update: n\")\n        mstore(add(headStart, 96), \"ot deployed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
      "id": 12,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "267:3489:11:-:0;;;713:341;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;719:10:5;921:18:0;:32::i;:::-;859:15:11::1;833:22;:41;;812:140;;;::::0;-1:-1:-1;;;812:140:11;;572:2:12;812:140:11::1;::::0;::::1;554:21:12::0;611:2;591:18;;;584:30;650:34;630:18;;;623:62;721:22;701:18;;;694:50;761:19;;812:140:11::1;;;;;;;;963:12;:28:::0;;-1:-1:-1;;;;;;963:28:11::1;-1:-1:-1::0;;;;;963:28:11;;;::::1;::::0;;;::::1;::::0;;;1001:21:::1;:46:::0;267:3489;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:351:12:-;93:6;101;154:2;142:9;133:7;129:23;125:32;122:52;;;170:1;167;160:12;122:52;196:16;;-1:-1:-1;;;;;241:31:12;;231:42;;221:70;;287:1;284;277:12;221:70;355:2;340:18;;;;334:25;310:5;;334:25;;-1:-1:-1;;;14:351:12:o;370:416::-;267:3489:11;;;;;;",
  "deployedSourceMap": "267:3489:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;456:30;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;363:32:12;;;345:51;;333:2;318:18;456:30:11;;;;;;;;620:86;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;620:86:11;;;;;;;;;;;-1:-1:-1;;;;;996:32:12;;;978:51;;1060:2;1045:18;;1038:34;;;;1088:18;;;1081:34;966:2;951:18;620:86:11;776:345:12;1668:101:0;;;:::i;:::-;;3616:138:11;;;;;;:::i;:::-;;:::i;1036:85:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;1036:85;;413:36:11;;;;;;;;;1531:25:12;;;1519:2;1504:18;413:36:11;1385:177:12;2180:323:11;;;:::i;2509:1101::-;;;;;;:::i;:::-;;:::i;1060:640::-;;;;;;:::i;:::-;;:::i;1706:468::-;;;;;;:::i;:::-;;:::i;380:27::-;;;;;-1:-1:-1;;;;;380:27:11;;;1918:198:0;;;;;;:::i;:::-;;:::i;456:30:11:-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;456:30:11;;-1:-1:-1;456:30:11;:::o;1668:101:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:5;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;3616:138:11:-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:5;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;3701:46:11::1;-1:-1:-1::0;;;;;3701:26:11;::::1;3728:10;3740:6:::0;3701:26:::1;:46::i;:::-;3616:138:::0;;:::o;2180:323::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:5;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;2258:13:11::1;:20:::0;2237:139:::1;;;::::0;-1:-1:-1;;;2237:139:11;;2457:2:12;2237:139:11::1;::::0;::::1;2439:21:12::0;2496:2;2476:18;;;2469:30;;;-1:-1:-1;;;;;;;;;;;2515:18:12;;;2508:62;2606:34;2586:18;;;2579:62;-1:-1:-1;;;2657:19:12;;;2650:35;2702:19;;2237:139:11::1;2255:472:12::0;2237:139:11::1;2391:9;2386:111;2410:13;:20:::0;2406:24;::::1;2386:111;;;2451:35;2469:13;2483:1;2469:16;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;2469:16:11::1;2451:17;:35::i;:::-;2432:3:::0;::::1;::::0;::::1;:::i;:::-;;;;2386:111;;;;2180:323::o:0;2509:1101::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:5;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;2625:21:11::1;;2606:15;:40;;2585:137;;;::::0;-1:-1:-1;;;2585:137:11;;3303:2:12;2585:137:11::1;::::0;::::1;3285:21:12::0;3342:2;3322:18;;;3315:30;-1:-1:-1;;;;;;;;;;;3361:18:12;;;3354:62;-1:-1:-1;;;3432:18:12;;;3425:48;3490:19;;2585:137:11::1;3101:414:12::0;2585:137:11::1;-1:-1:-1::0;;;;;2766:68:11;;::::1;2732:31;2766:68:::0;;;:32:::1;:68;::::0;;;;2865:19;;2766:68;;2865:19:::1;2844:134;;;::::0;-1:-1:-1;;;2844:134:11;;3722:2:12;2844:134:11::1;::::0;::::1;3704:21:12::0;3761:2;3741:18;;;3734:30;-1:-1:-1;;;;;;;;;;;3780:18:12;;;3773:62;-1:-1:-1;;;3851:18:12;;;3844:52;3913:19;;2844:134:11::1;3520:418:12::0;2844:134:11::1;3013:1;2993:4;:17;;;:21;:42;;;;;3034:1;3018:4;:13;;;:17;2993:42;2989:615;;;3074:17;::::0;;::::1;::::0;;3124:13:::1;::::0;::::1;::::0;;3051:20:::1;3151:21:::0;;;;3186:17;;;3250:12;;3294:19;;3243:122:::1;::::0;-1:-1:-1;;;3243:122:11;;-1:-1:-1;;;;;3294:19:11;;::::1;3243:122;::::0;::::1;4117:51:12::0;4184:18;;;4177:34;;;3250:12:11;::::1;::::0;3243:29:::1;::::0;4090:18:12;;3243:122:11::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3218:238;;;::::0;-1:-1:-1;;;3218:238:11;;4706:2:12;3218:238:11::1;::::0;::::1;4688:21:12::0;4745:2;4725:18;;;4718:30;-1:-1:-1;;;;;;;;;;;4764:18:12;;;4757:62;4855:27;4835:18;;;4828:55;4900:19;;3218:238:11::1;4504:421:12::0;3218:238:11::1;3485:19:::0;;3470:123:::1;::::0;-1:-1:-1;;;3470:123:11;;::::1;::::0;::::1;5104:25:12::0;;;5145:18;;;5138:34;;;-1:-1:-1;;;;;3485:19:11;;::::1;::::0;3470:53:::1;::::0;5077:18:12;;3470:123:11::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3037:567;;2575:1035;2509:1101:::0;:::o;1060:640::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:5;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;1236:68:11;;::::1;1202:31;1236:68:::0;;;:32:::1;:68;::::0;;;;1335:19;;1236:68;;1335:19:::1;:33:::0;1314:127:::1;;;::::0;-1:-1:-1;;;1314:127:11;;5385:2:12;1314:127:11::1;::::0;::::1;5367:21:12::0;5424:2;5404:18;;;5397:30;5463:34;5443:18;;;5436:62;-1:-1:-1;;;5514:18:12;;;5507:45;5569:19;;1314:127:11::1;5183:411:12::0;1314:127:11::1;1529:12;::::0;1495:61:::1;::::0;1522:4:::1;::::0;-1:-1:-1;;;;;1529:12:11::1;::::0;1543;;1495:61:::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;;;;;5857:15:12;;;5839:34;;5909:15;;;5904:2;5889:18;;5882:43;5961:15;;;5956:2;5941:18;;5934:43;5789:2;5774:18;1495:61:11::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;1452:114:11;;-1:-1:-1;;;;;;1452:114:11;;::::1;-1:-1:-1::0;;;;;1452:114:11;;::::1;;::::0;;-1:-1:-1;1577:17:11;;::::1;:32:::0;;;;1619:13:::1;::::0;;::::1;:31:::0;;;;1661:13:::1;:32:::0;;;;::::1;::::0;;-1:-1:-1;1661:32:11;;;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;1060:640::o;1706:468::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:5;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;1882:68:11;;::::1;1848:31;1882:68:::0;;;:32:::1;:68;::::0;;;;1981:19;;1882:68;;1981:19:::1;1960:123;;;::::0;-1:-1:-1;;;1960:123:11;;6190:2:12;1960:123:11::1;::::0;::::1;6172:21:12::0;6229:2;6209:18;;;6202:30;6268:34;6248:18;;;6241:62;-1:-1:-1;;;6319:18:12;;;6312:41;6370:19;;1960:123:11::1;5988:407:12::0;1960:123:11::1;2094:17;::::0;::::1;:32:::0;;;;2136:13:::1;::::0;;::::1;:31:::0;-1:-1:-1;1706:468:11:o;1918:198:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:5;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;6602:2:12;1998:73:0::1;::::0;::::1;6584:21:12::0;6641:2;6621:18;;;6614:30;6680:34;6660:18;;;6653:62;-1:-1:-1;;;6731:18:12;;;6724:36;6777:19;;1998:73:0::1;6400:402:12::0;1998:73:0::1;2081:28;2100:8;2270:187:::0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;701:205:3:-;840:58;;;-1:-1:-1;;;;;4135:32:12;;840:58:3;;;4117:51:12;4184:18;;;;4177:34;;;840:58:3;;;;;;;;;;4090:18:12;;;;840:58:3;;;;;;;;-1:-1:-1;;;;;840:58:3;-1:-1:-1;;;840:58:3;;;813:86;;833:5;;813:19;:86::i;:::-;701:205;;;:::o;3207:706::-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;-1:-1:-1;;;;;3652:27:3;;;:69;;;;;:::i;:::-;3735:17;;3626:95;;-1:-1:-1;3735:21:3;3731:176;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;-1:-1:-1;;;3811:85:3;;7009:2:12;3811:85:3;;;6991:21:12;7048:2;7028:18;;;7021:30;7087:34;7067:18;;;7060:62;-1:-1:-1;;;7138:18:12;;;7131:40;7188:19;;3811:85:3;6807:406:12;3514:223:4;3647:12;3678:52;3700:6;3708:4;3714:1;3717:12;3678:21;:52::i;:::-;3671:59;;3514:223;;;;;;:::o;4601:499::-;4766:12;4823:5;4798:21;:30;;4790:81;;;;-1:-1:-1;;;4790:81:4;;7420:2:12;4790:81:4;;;7402:21:12;7459:2;7439:18;;;7432:30;7498:34;7478:18;;;7471:62;-1:-1:-1;;;7549:18:12;;;7542:36;7595:19;;4790:81:4;7218:402:12;4790:81:4;1087:20;;4881:60;;;;-1:-1:-1;;;4881:60:4;;7827:2:12;4881:60:4;;;7809:21:12;7866:2;7846:18;;;7839:30;7905:31;7885:18;;;7878:59;7954:18;;4881:60:4;7625:353:12;4881:60:4;4953:12;4967:23;4994:6;-1:-1:-1;;;;;4994:11:4;5013:5;5020:4;4994:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4952:73;;;;5042:51;5059:7;5068:10;5080:12;5042:16;:51::i;:::-;5035:58;4601:499;-1:-1:-1;;;;;;;4601:499:4:o;7214:692::-;7360:12;7388:7;7384:516;;;-1:-1:-1;7418:10:4;7411:17;;7384:516;7529:17;;:21;7525:365;;7723:10;7717:17;7783:15;7770:10;7766:2;7762:19;7755:44;7525:365;7862:12;7855:20;;-1:-1:-1;;;7855:20:4;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;:::o;14:180:12:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:12;;14:180;-1:-1:-1;14:180:12:o;407:173::-;475:20;;-1:-1:-1;;;;;524:31:12;;514:42;;504:70;;570:1;567;560:12;504:70;407:173;;;:::o;585:186::-;644:6;697:2;685:9;676:7;672:23;668:32;665:52;;;713:1;710;703:12;665:52;736:29;755:9;736:29;:::i;1126:254::-;1194:6;1202;1255:2;1243:9;1234:7;1230:23;1226:32;1223:52;;;1271:1;1268;1261:12;1223:52;1294:29;1313:9;1294:29;:::i;:::-;1284:39;1370:2;1355:18;;;;1342:32;;-1:-1:-1;;;1126:254:12:o;1567:322::-;1644:6;1652;1660;1713:2;1701:9;1692:7;1688:23;1684:32;1681:52;;;1729:1;1726;1719:12;1681:52;1752:29;1771:9;1752:29;:::i;:::-;1742:39;1828:2;1813:18;;1800:32;;-1:-1:-1;1879:2:12;1864:18;;;1851:32;;1567:322;-1:-1:-1;;;1567:322:12:o;1894:356::-;2096:2;2078:21;;;2115:18;;;2108:30;2174:34;2169:2;2154:18;;2147:62;2241:2;2226:18;;1894:356::o;2732:127::-;2793:10;2788:3;2784:20;2781:1;2774:31;2824:4;2821:1;2814:15;2848:4;2845:1;2838:15;2864:232;2903:3;-1:-1:-1;;2924:17:12;;2921:140;;;2983:10;2978:3;2974:20;2971:1;2964:31;3018:4;3015:1;3008:15;3046:4;3043:1;3036:15;2921:140;-1:-1:-1;3088:1:12;3077:13;;2864:232::o;4222:277::-;4289:6;4342:2;4330:9;4321:7;4317:23;4313:32;4310:52;;;4358:1;4355;4348:12;4310:52;4390:9;4384:16;4443:5;4436:13;4429:21;4422:5;4419:32;4409:60;;4465:1;4462;4455:12;7983:258;8055:1;8065:113;8079:6;8076:1;8073:13;8065:113;;;8155:11;;;8149:18;8136:11;;;8129:39;8101:2;8094:10;8065:113;;;8196:6;8193:1;8190:13;8187:48;;;8231:1;8222:6;8217:3;8213:16;8206:27;8187:48;;7983:258;;;:::o;8246:274::-;8375:3;8413:6;8407:13;8429:53;8475:6;8470:3;8463:4;8455:6;8451:17;8429:53;:::i;:::-;8498:16;;;;;8246:274;-1:-1:-1;;8246:274:12:o;8525:383::-;8674:2;8663:9;8656:21;8637:4;8706:6;8700:13;8749:6;8744:2;8733:9;8729:18;8722:34;8765:66;8824:6;8819:2;8808:9;8804:18;8799:2;8791:6;8787:15;8765:66;:::i;:::-;8892:2;8871:15;-1:-1:-1;;8867:29:12;8852:45;;;;8899:2;8848:54;;8525:383;-1:-1:-1;;8525:383:12:o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\n\nimport \"./StakingRewards.sol\";\n\ncontract StakingRewardsFactory is Ownable {\n    using SafeERC20 for IERC20;\n    using SafeMath for uint256;\n\n    address public rewardsToken;\n    uint256 public stakingRewardsGenesis;\n\n    address[] public stakingTokens;\n\n    struct StakingRewardsInfo {\n        address stakingRewards;\n        uint256 rewardAmount;\n        uint256 duration;\n    }\n\n    mapping(address => StakingRewardsInfo)\n        public stakingRewardsInfoByStakingToken;\n\n    constructor(address _rewardsToken, uint256 _stakingRewardsGenesis)\n        Ownable()\n    {\n        require(\n            _stakingRewardsGenesis >= block.timestamp,\n            \"StakingRewardsFactory::constructor: genesis too soon\"\n        );\n\n        rewardsToken = _rewardsToken;\n        stakingRewardsGenesis = _stakingRewardsGenesis;\n    }\n\n    function deploy(\n        address stakingToken,\n        uint256 rewardAmount,\n        uint256 rewardsDuration\n    ) public onlyOwner {\n        StakingRewardsInfo storage info = stakingRewardsInfoByStakingToken[\n            stakingToken\n        ];\n        require(\n            info.stakingRewards == address(0),\n            \"StakingRewardsFactory::deploy: already deployed\"\n        );\n\n        info.stakingRewards = address(\n            new StakingRewards(address(this), rewardsToken, stakingToken)\n        );\n\n        info.rewardAmount = rewardAmount;\n        info.duration = rewardsDuration;\n\n        stakingTokens.push(stakingToken);\n    }\n\n    function update(\n        address stakingToken,\n        uint256 rewardAmount,\n        uint256 rewardsDuration\n    ) public onlyOwner {\n        StakingRewardsInfo storage info = stakingRewardsInfoByStakingToken[\n            stakingToken\n        ];\n        require(\n            info.stakingRewards != address(0),\n            \"StakingRewardsFactory::update: not deployed\"\n        );\n\n        info.rewardAmount = rewardAmount;\n        info.duration = rewardsDuration;\n    }\n\n    function claimRewardAmounts() public onlyOwner {\n        require(\n            stakingTokens.length > 0,\n            \"StakingRewardsFactory::claimRewardAmounts: called before any deploys\"\n        );\n        for (uint256 i = 0; i < stakingTokens.length; i++) {\n            claimRewardAmount(stakingTokens[i]);\n        }\n    }\n\n    function claimRewardAmount(address stakingToken) public onlyOwner {\n        require(\n            block.timestamp >= stakingRewardsGenesis,\n            \"StakingRewardsFactory::claimRewardAmount: too soon\"\n        );\n        StakingRewardsInfo storage info = stakingRewardsInfoByStakingToken[\n            stakingToken\n        ];\n        require(\n            info.stakingRewards != address(0),\n            \"StakingRewardsFactory::claimRewardAmount: not deployed\"\n        );\n\n        if (info.rewardAmount > 0 && info.duration > 0) {\n            uint256 rewardAmount = info.rewardAmount;\n            uint256 duration = info.duration;\n            info.rewardAmount = 0;\n            info.duration = 0;\n\n            require(\n                IERC20(rewardsToken).transfer(\n                    info.stakingRewards,\n                    rewardAmount\n                ),\n                \"StakingRewardsFactory::claimRewardAmount: transfer failed\"\n            );\n            StakingRewards(info.stakingRewards).claimRewardAmount(\n                rewardAmount,\n                duration\n            );\n        }\n    }\n\n    function pullExtraTokens(address token, uint256 amount) external onlyOwner {\n        IERC20(token).safeTransfer(msg.sender, amount);\n    }\n}\n",
  "sourcePath": "/home/owo/Downloads/solidity-test/solidity-test/contracts/StakingRewardsFactory.sol",
  "ast": {
    "absolutePath": "project:/contracts/StakingRewardsFactory.sol",
    "exportedSymbols": {
      "Address": [
        743
      ],
      "Context": [
        765
      ],
      "IERC20": [
        222
      ],
      "IStakingRewards": [
        1232
      ],
      "Math": [
        853
      ],
      "Ownable": [
        104
      ],
      "ReentrancyGuard": [
        144
      ],
      "RewardsDistributionRecipient": [
        1249
      ],
      "SafeERC20": [
        446
      ],
      "SafeMath": [
        1165
      ],
      "StakingRewards": [
        1957
      ],
      "StakingRewardsFactory": [
        2266
      ]
    },
    "id": 2267,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1959,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:11"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 1960,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2267,
        "sourceUnit": 105,
        "src": "57:52:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 1961,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2267,
        "sourceUnit": 447,
        "src": "110:65:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 1962,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2267,
        "sourceUnit": 1166,
        "src": "176:57:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/StakingRewards.sol",
        "file": "./StakingRewards.sol",
        "id": 1963,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2267,
        "sourceUnit": 1958,
        "src": "235:30:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1964,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 104,
              "src": "301:7:11"
            },
            "id": 1965,
            "nodeType": "InheritanceSpecifier",
            "src": "301:7:11"
          }
        ],
        "canonicalName": "StakingRewardsFactory",
        "contractDependencies": [
          1957
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2266,
        "linearizedBaseContracts": [
          2266,
          104,
          765
        ],
        "name": "StakingRewardsFactory",
        "nameLocation": "276:21:11",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1969,
            "libraryName": {
              "id": 1966,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 446,
              "src": "321:9:11"
            },
            "nodeType": "UsingForDirective",
            "src": "315:27:11",
            "typeName": {
              "id": 1968,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1967,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 222,
                "src": "335:6:11"
              },
              "referencedDeclaration": 222,
              "src": "335:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$222",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 1972,
            "libraryName": {
              "id": 1970,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1165,
              "src": "353:8:11"
            },
            "nodeType": "UsingForDirective",
            "src": "347:27:11",
            "typeName": {
              "id": 1971,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "366:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "d1af0c7d",
            "id": 1974,
            "mutability": "mutable",
            "name": "rewardsToken",
            "nameLocation": "395:12:11",
            "nodeType": "VariableDeclaration",
            "scope": 2266,
            "src": "380:27:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1973,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "380:7:11",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a0928c11",
            "id": 1976,
            "mutability": "mutable",
            "name": "stakingRewardsGenesis",
            "nameLocation": "428:21:11",
            "nodeType": "VariableDeclaration",
            "scope": 2266,
            "src": "413:36:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1975,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "413:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "344e5e34",
            "id": 1979,
            "mutability": "mutable",
            "name": "stakingTokens",
            "nameLocation": "473:13:11",
            "nodeType": "VariableDeclaration",
            "scope": 2266,
            "src": "456:30:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 1977,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "456:7:11",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 1978,
              "nodeType": "ArrayTypeName",
              "src": "456:9:11",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "StakingRewardsFactory.StakingRewardsInfo",
            "id": 1986,
            "members": [
              {
                "constant": false,
                "id": 1981,
                "mutability": "mutable",
                "name": "stakingRewards",
                "nameLocation": "537:14:11",
                "nodeType": "VariableDeclaration",
                "scope": 1986,
                "src": "529:22:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1980,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "529:7:11",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1983,
                "mutability": "mutable",
                "name": "rewardAmount",
                "nameLocation": "569:12:11",
                "nodeType": "VariableDeclaration",
                "scope": 1986,
                "src": "561:20:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1982,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "561:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1985,
                "mutability": "mutable",
                "name": "duration",
                "nameLocation": "599:8:11",
                "nodeType": "VariableDeclaration",
                "scope": 1986,
                "src": "591:16:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1984,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "591:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "StakingRewardsInfo",
            "nameLocation": "500:18:11",
            "nodeType": "StructDefinition",
            "scope": 2266,
            "src": "493:121:11",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6cf8caf8",
            "id": 1991,
            "mutability": "mutable",
            "name": "stakingRewardsInfoByStakingToken",
            "nameLocation": "674:32:11",
            "nodeType": "VariableDeclaration",
            "scope": 2266,
            "src": "620:86:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingRewardsInfo_$1986_storage_$",
              "typeString": "mapping(address => struct StakingRewardsFactory.StakingRewardsInfo)"
            },
            "typeName": {
              "id": 1990,
              "keyType": {
                "id": 1987,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "628:7:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "620:38:11",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingRewardsInfo_$1986_storage_$",
                "typeString": "mapping(address => struct StakingRewardsFactory.StakingRewardsInfo)"
              },
              "valueType": {
                "id": 1989,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1988,
                  "name": "StakingRewardsInfo",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1986,
                  "src": "639:18:11"
                },
                "referencedDeclaration": 1986,
                "src": "639:18:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_StakingRewardsInfo_$1986_storage_ptr",
                  "typeString": "struct StakingRewardsFactory.StakingRewardsInfo"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 2016,
              "nodeType": "Block",
              "src": "802:252:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2001,
                          "name": "_stakingRewardsGenesis",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1995,
                          "src": "833:22:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 2002,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "859:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 2003,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "859:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "833:41:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b696e6752657761726473466163746f72793a3a636f6e7374727563746f723a2067656e6573697320746f6f20736f6f6e",
                        "id": 2005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "888:54:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f22e14100106eb9f2180e576eda6e762fdcbd26e14106a6823275a3b8fdea515",
                          "typeString": "literal_string \"StakingRewardsFactory::constructor: genesis too soon\""
                        },
                        "value": "StakingRewardsFactory::constructor: genesis too soon"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f22e14100106eb9f2180e576eda6e762fdcbd26e14106a6823275a3b8fdea515",
                          "typeString": "literal_string \"StakingRewardsFactory::constructor: genesis too soon\""
                        }
                      ],
                      "id": 2000,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "812:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "812:140:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2007,
                  "nodeType": "ExpressionStatement",
                  "src": "812:140:11"
                },
                {
                  "expression": {
                    "id": 2010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2008,
                      "name": "rewardsToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1974,
                      "src": "963:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2009,
                      "name": "_rewardsToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1993,
                      "src": "978:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "963:28:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2011,
                  "nodeType": "ExpressionStatement",
                  "src": "963:28:11"
                },
                {
                  "expression": {
                    "id": 2014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2012,
                      "name": "stakingRewardsGenesis",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1976,
                      "src": "1001:21:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2013,
                      "name": "_stakingRewardsGenesis",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1995,
                      "src": "1025:22:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1001:46:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2015,
                  "nodeType": "ExpressionStatement",
                  "src": "1001:46:11"
                }
              ]
            },
            "id": 2017,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [],
                "id": 1998,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 1997,
                  "name": "Ownable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 104,
                  "src": "788:7:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "788:9:11"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1996,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1993,
                  "mutability": "mutable",
                  "name": "_rewardsToken",
                  "nameLocation": "733:13:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2017,
                  "src": "725:21:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1992,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "725:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1995,
                  "mutability": "mutable",
                  "name": "_stakingRewardsGenesis",
                  "nameLocation": "756:22:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2017,
                  "src": "748:30:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1994,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "748:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "724:55:11"
            },
            "returnParameters": {
              "id": 1999,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "802:0:11"
            },
            "scope": 2266,
            "src": "713:341:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2082,
              "nodeType": "Block",
              "src": "1192:508:11",
              "statements": [
                {
                  "assignments": [
                    2030
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2030,
                      "mutability": "mutable",
                      "name": "info",
                      "nameLocation": "1229:4:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 2082,
                      "src": "1202:31:11",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakingRewardsInfo_$1986_storage_ptr",
                        "typeString": "struct StakingRewardsFactory.StakingRewardsInfo"
                      },
                      "typeName": {
                        "id": 2029,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2028,
                          "name": "StakingRewardsInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1986,
                          "src": "1202:18:11"
                        },
                        "referencedDeclaration": 1986,
                        "src": "1202:18:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakingRewardsInfo_$1986_storage_ptr",
                          "typeString": "struct StakingRewardsFactory.StakingRewardsInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2034,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2031,
                      "name": "stakingRewardsInfoByStakingToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1991,
                      "src": "1236:32:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingRewardsInfo_$1986_storage_$",
                        "typeString": "mapping(address => struct StakingRewardsFactory.StakingRewardsInfo storage ref)"
                      }
                    },
                    "id": 2033,
                    "indexExpression": {
                      "id": 2032,
                      "name": "stakingToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2019,
                      "src": "1282:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1236:68:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakingRewardsInfo_$1986_storage",
                      "typeString": "struct StakingRewardsFactory.StakingRewardsInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1202:102:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2036,
                            "name": "info",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2030,
                            "src": "1335:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StakingRewardsInfo_$1986_storage_ptr",
                              "typeString": "struct StakingRewardsFactory.StakingRewardsInfo storage pointer"
                            }
                          },
                          "id": 2037,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "stakingRewards",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1981,
                          "src": "1335:19:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2040,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1366:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2039,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1358:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2038,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1358:7:11",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1358:10:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1335:33:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b696e6752657761726473466163746f72793a3a6465706c6f793a20616c7265616479206465706c6f796564",
                        "id": 2043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1382:49:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_77d8567a7b7bf9a9a30ea727f6e525cae6667d736cdaff555c86db8d81648a1a",
                          "typeString": "literal_string \"StakingRewardsFactory::deploy: already deployed\""
                        },
                        "value": "StakingRewardsFactory::deploy: already deployed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_77d8567a7b7bf9a9a30ea727f6e525cae6667d736cdaff555c86db8d81648a1a",
                          "typeString": "literal_string \"StakingRewardsFactory::deploy: already deployed\""
                        }
                      ],
                      "id": 2035,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1314:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1314:127:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2045,
                  "nodeType": "ExpressionStatement",
                  "src": "1314:127:11"
                },
                {
                  "expression": {
                    "id": 2062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2046,
                        "name": "info",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2030,
                        "src": "1452:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakingRewardsInfo_$1986_storage_ptr",
                          "typeString": "struct StakingRewardsFactory.StakingRewardsInfo storage pointer"
                        }
                      },
                      "id": 2048,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "stakingRewards",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1981,
                      "src": "1452:19:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2056,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "1522:4:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingRewardsFactory_$2266",
                                    "typeString": "contract StakingRewardsFactory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_StakingRewardsFactory_$2266",
                                    "typeString": "contract StakingRewardsFactory"
                                  }
                                ],
                                "id": 2055,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1514:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2054,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1514:7:11",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2057,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1514:13:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2058,
                              "name": "rewardsToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1974,
                              "src": "1529:12:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2059,
                              "name": "stakingToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2019,
                              "src": "1543:12:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2053,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "1495:18:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_address_$returns$_t_contract$_StakingRewards_$1957_$",
                              "typeString": "function (address,address,address) returns (contract StakingRewards)"
                            },
                            "typeName": {
                              "id": 2052,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2051,
                                "name": "StakingRewards",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1957,
                                "src": "1499:14:11"
                              },
                              "referencedDeclaration": 1957,
                              "src": "1499:14:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingRewards_$1957",
                                "typeString": "contract StakingRewards"
                              }
                            }
                          },
                          "id": 2060,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1495:61:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingRewards_$1957",
                            "typeString": "contract StakingRewards"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_StakingRewards_$1957",
                            "typeString": "contract StakingRewards"
                          }
                        ],
                        "id": 2050,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1474:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 2049,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1474:7:11",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2061,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1474:92:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1452:114:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2063,
                  "nodeType": "ExpressionStatement",
                  "src": "1452:114:11"
                },
                {
                  "expression": {
                    "id": 2068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2064,
                        "name": "info",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2030,
                        "src": "1577:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakingRewardsInfo_$1986_storage_ptr",
                          "typeString": "struct StakingRewardsFactory.StakingRewardsInfo storage pointer"
                        }
                      },
                      "id": 2066,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "rewardAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1983,
                      "src": "1577:17:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2067,
                      "name": "rewardAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2021,
                      "src": "1597:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1577:32:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2069,
                  "nodeType": "ExpressionStatement",
                  "src": "1577:32:11"
                },
                {
                  "expression": {
                    "id": 2074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2070,
                        "name": "info",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2030,
                        "src": "1619:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakingRewardsInfo_$1986_storage_ptr",
                          "typeString": "struct StakingRewardsFactory.StakingRewardsInfo storage pointer"
                        }
                      },
                      "id": 2072,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "duration",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1985,
                      "src": "1619:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2073,
                      "name": "rewardsDuration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2023,
                      "src": "1635:15:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1619:31:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2075,
                  "nodeType": "ExpressionStatement",
                  "src": "1619:31:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2079,
                        "name": "stakingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2019,
                        "src": "1680:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2076,
                        "name": "stakingTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1979,
                        "src": "1661:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 2078,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1661:18:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 2080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1661:32:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2081,
                  "nodeType": "ExpressionStatement",
                  "src": "1661:32:11"
                }
              ]
            },
            "functionSelector": "cfda5478",
            "id": 2083,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2026,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2025,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "1182:9:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "1182:9:11"
              }
            ],
            "name": "deploy",
            "nameLocation": "1069:6:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2024,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2019,
                  "mutability": "mutable",
                  "name": "stakingToken",
                  "nameLocation": "1093:12:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2083,
                  "src": "1085:20:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2018,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1085:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2021,
                  "mutability": "mutable",
                  "name": "rewardAmount",
                  "nameLocation": "1123:12:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2083,
                  "src": "1115:20:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2020,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1115:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2023,
                  "mutability": "mutable",
                  "name": "rewardsDuration",
                  "nameLocation": "1153:15:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2083,
                  "src": "1145:23:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2022,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1145:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1075:99:11"
            },
            "returnParameters": {
              "id": 2027,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1192:0:11"
            },
            "scope": 2266,
            "src": "1060:640:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2124,
              "nodeType": "Block",
              "src": "1838:336:11",
              "statements": [
                {
                  "assignments": [
                    2096
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2096,
                      "mutability": "mutable",
                      "name": "info",
                      "nameLocation": "1875:4:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 2124,
                      "src": "1848:31:11",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakingRewardsInfo_$1986_storage_ptr",
                        "typeString": "struct StakingRewardsFactory.StakingRewardsInfo"
                      },
                      "typeName": {
                        "id": 2095,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2094,
                          "name": "StakingRewardsInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1986,
                          "src": "1848:18:11"
                        },
                        "referencedDeclaration": 1986,
                        "src": "1848:18:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakingRewardsInfo_$1986_storage_ptr",
                          "typeString": "struct StakingRewardsFactory.StakingRewardsInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2100,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2097,
                      "name": "stakingRewardsInfoByStakingToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1991,
                      "src": "1882:32:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingRewardsInfo_$1986_storage_$",
                        "typeString": "mapping(address => struct StakingRewardsFactory.StakingRewardsInfo storage ref)"
                      }
                    },
                    "id": 2099,
                    "indexExpression": {
                      "id": 2098,
                      "name": "stakingToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2085,
                      "src": "1928:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1882:68:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakingRewardsInfo_$1986_storage",
                      "typeString": "struct StakingRewardsFactory.StakingRewardsInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1848:102:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2102,
                            "name": "info",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2096,
                            "src": "1981:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StakingRewardsInfo_$1986_storage_ptr",
                              "typeString": "struct StakingRewardsFactory.StakingRewardsInfo storage pointer"
                            }
                          },
                          "id": 2103,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "stakingRewards",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1981,
                          "src": "1981:19:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2106,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2012:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2105,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2004:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2104,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2004:7:11",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2004:10:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1981:33:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b696e6752657761726473466163746f72793a3a7570646174653a206e6f74206465706c6f796564",
                        "id": 2109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2028:45:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2680931cb8d2562eb985862b2b0f9b8f59411984dfac76c0f3e1c1ba0c024efb",
                          "typeString": "literal_string \"StakingRewardsFactory::update: not deployed\""
                        },
                        "value": "StakingRewardsFactory::update: not deployed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2680931cb8d2562eb985862b2b0f9b8f59411984dfac76c0f3e1c1ba0c024efb",
                          "typeString": "literal_string \"StakingRewardsFactory::update: not deployed\""
                        }
                      ],
                      "id": 2101,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1960:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1960:123:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2111,
                  "nodeType": "ExpressionStatement",
                  "src": "1960:123:11"
                },
                {
                  "expression": {
                    "id": 2116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2112,
                        "name": "info",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2096,
                        "src": "2094:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakingRewardsInfo_$1986_storage_ptr",
                          "typeString": "struct StakingRewardsFactory.StakingRewardsInfo storage pointer"
                        }
                      },
                      "id": 2114,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "rewardAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1983,
                      "src": "2094:17:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2115,
                      "name": "rewardAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2087,
                      "src": "2114:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2094:32:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2117,
                  "nodeType": "ExpressionStatement",
                  "src": "2094:32:11"
                },
                {
                  "expression": {
                    "id": 2122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2118,
                        "name": "info",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2096,
                        "src": "2136:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakingRewardsInfo_$1986_storage_ptr",
                          "typeString": "struct StakingRewardsFactory.StakingRewardsInfo storage pointer"
                        }
                      },
                      "id": 2120,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "duration",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1985,
                      "src": "2136:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2121,
                      "name": "rewardsDuration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2089,
                      "src": "2152:15:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2136:31:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2123,
                  "nodeType": "ExpressionStatement",
                  "src": "2136:31:11"
                }
              ]
            },
            "functionSelector": "d09b6d43",
            "id": 2125,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2092,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2091,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "1828:9:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "1828:9:11"
              }
            ],
            "name": "update",
            "nameLocation": "1715:6:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2090,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2085,
                  "mutability": "mutable",
                  "name": "stakingToken",
                  "nameLocation": "1739:12:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2125,
                  "src": "1731:20:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2084,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1731:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2087,
                  "mutability": "mutable",
                  "name": "rewardAmount",
                  "nameLocation": "1769:12:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2125,
                  "src": "1761:20:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2086,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1761:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2089,
                  "mutability": "mutable",
                  "name": "rewardsDuration",
                  "nameLocation": "1799:15:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2125,
                  "src": "1791:23:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2088,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1791:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1721:99:11"
            },
            "returnParameters": {
              "id": 2093,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1838:0:11"
            },
            "scope": 2266,
            "src": "1706:468:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2157,
              "nodeType": "Block",
              "src": "2227:276:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2131,
                            "name": "stakingTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1979,
                            "src": "2258:13:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 2132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2258:20:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2281:1:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2258:24:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b696e6752657761726473466163746f72793a3a636c61696d526577617264416d6f756e74733a2063616c6c6564206265666f726520616e79206465706c6f7973",
                        "id": 2135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2296:70:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e0bd7787e67b6d58949cce0263a4e9f3ec69a807c23e665463c6edda538d1836",
                          "typeString": "literal_string \"StakingRewardsFactory::claimRewardAmounts: called before any deploys\""
                        },
                        "value": "StakingRewardsFactory::claimRewardAmounts: called before any deploys"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e0bd7787e67b6d58949cce0263a4e9f3ec69a807c23e665463c6edda538d1836",
                          "typeString": "literal_string \"StakingRewardsFactory::claimRewardAmounts: called before any deploys\""
                        }
                      ],
                      "id": 2130,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2237:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2237:139:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2137,
                  "nodeType": "ExpressionStatement",
                  "src": "2237:139:11"
                },
                {
                  "body": {
                    "id": 2155,
                    "nodeType": "Block",
                    "src": "2437:60:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 2150,
                                "name": "stakingTokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1979,
                                "src": "2469:13:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 2152,
                              "indexExpression": {
                                "id": 2151,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2139,
                                "src": "2483:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2469:16:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2149,
                            "name": "claimRewardAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2246,
                            "src": "2451:17:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 2153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2451:35:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2154,
                        "nodeType": "ExpressionStatement",
                        "src": "2451:35:11"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2142,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2139,
                      "src": "2406:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 2143,
                        "name": "stakingTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1979,
                        "src": "2410:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 2144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2410:20:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2406:24:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2156,
                  "initializationExpression": {
                    "assignments": [
                      2139
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2139,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2399:1:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2156,
                        "src": "2391:9:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2138,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2391:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2141,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2403:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2391:13:11"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2147,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2432:3:11",
                      "subExpression": {
                        "id": 2146,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2139,
                        "src": "2432:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2148,
                    "nodeType": "ExpressionStatement",
                    "src": "2432:3:11"
                  },
                  "nodeType": "ForStatement",
                  "src": "2386:111:11"
                }
              ]
            },
            "functionSelector": "bf44ba6c",
            "id": 2158,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2128,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2127,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "2217:9:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "2217:9:11"
              }
            ],
            "name": "claimRewardAmounts",
            "nameLocation": "2189:18:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2126,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2207:2:11"
            },
            "returnParameters": {
              "id": 2129,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2227:0:11"
            },
            "scope": 2266,
            "src": "2180:323:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2245,
              "nodeType": "Block",
              "src": "2575:1035:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2166,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "2606:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 2167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "2606:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 2168,
                          "name": "stakingRewardsGenesis",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1976,
                          "src": "2625:21:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2606:40:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b696e6752657761726473466163746f72793a3a636c61696d526577617264416d6f756e743a20746f6f20736f6f6e",
                        "id": 2170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2660:52:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_916e5dd87ddc58653085017fdc1077365484d358d0456882e4fc6ba909101e24",
                          "typeString": "literal_string \"StakingRewardsFactory::claimRewardAmount: too soon\""
                        },
                        "value": "StakingRewardsFactory::claimRewardAmount: too soon"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_916e5dd87ddc58653085017fdc1077365484d358d0456882e4fc6ba909101e24",
                          "typeString": "literal_string \"StakingRewardsFactory::claimRewardAmount: too soon\""
                        }
                      ],
                      "id": 2165,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2585:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2585:137:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2172,
                  "nodeType": "ExpressionStatement",
                  "src": "2585:137:11"
                },
                {
                  "assignments": [
                    2175
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2175,
                      "mutability": "mutable",
                      "name": "info",
                      "nameLocation": "2759:4:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 2245,
                      "src": "2732:31:11",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakingRewardsInfo_$1986_storage_ptr",
                        "typeString": "struct StakingRewardsFactory.StakingRewardsInfo"
                      },
                      "typeName": {
                        "id": 2174,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2173,
                          "name": "StakingRewardsInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1986,
                          "src": "2732:18:11"
                        },
                        "referencedDeclaration": 1986,
                        "src": "2732:18:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakingRewardsInfo_$1986_storage_ptr",
                          "typeString": "struct StakingRewardsFactory.StakingRewardsInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2179,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2176,
                      "name": "stakingRewardsInfoByStakingToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1991,
                      "src": "2766:32:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingRewardsInfo_$1986_storage_$",
                        "typeString": "mapping(address => struct StakingRewardsFactory.StakingRewardsInfo storage ref)"
                      }
                    },
                    "id": 2178,
                    "indexExpression": {
                      "id": 2177,
                      "name": "stakingToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2160,
                      "src": "2812:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2766:68:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakingRewardsInfo_$1986_storage",
                      "typeString": "struct StakingRewardsFactory.StakingRewardsInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2732:102:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2181,
                            "name": "info",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2175,
                            "src": "2865:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StakingRewardsInfo_$1986_storage_ptr",
                              "typeString": "struct StakingRewardsFactory.StakingRewardsInfo storage pointer"
                            }
                          },
                          "id": 2182,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "stakingRewards",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1981,
                          "src": "2865:19:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2185,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2896:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2184,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2888:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2183,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2888:7:11",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2888:10:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2865:33:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b696e6752657761726473466163746f72793a3a636c61696d526577617264416d6f756e743a206e6f74206465706c6f796564",
                        "id": 2188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2912:56:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_22bfc8d55e681659d9ff180bcf801d6948db86e70b2d68ffccbdc7deaeaa8054",
                          "typeString": "literal_string \"StakingRewardsFactory::claimRewardAmount: not deployed\""
                        },
                        "value": "StakingRewardsFactory::claimRewardAmount: not deployed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_22bfc8d55e681659d9ff180bcf801d6948db86e70b2d68ffccbdc7deaeaa8054",
                          "typeString": "literal_string \"StakingRewardsFactory::claimRewardAmount: not deployed\""
                        }
                      ],
                      "id": 2180,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2844:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2844:134:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2190,
                  "nodeType": "ExpressionStatement",
                  "src": "2844:134:11"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2194,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 2191,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2175,
                          "src": "2993:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StakingRewardsInfo_$1986_storage_ptr",
                            "typeString": "struct StakingRewardsFactory.StakingRewardsInfo storage pointer"
                          }
                        },
                        "id": 2192,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rewardAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1983,
                        "src": "2993:17:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 2193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3013:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2993:21:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 2195,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2175,
                          "src": "3018:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StakingRewardsInfo_$1986_storage_ptr",
                            "typeString": "struct StakingRewardsFactory.StakingRewardsInfo storage pointer"
                          }
                        },
                        "id": 2196,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "duration",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1985,
                        "src": "3018:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 2197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3034:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3018:17:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2993:42:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2244,
                  "nodeType": "IfStatement",
                  "src": "2989:615:11",
                  "trueBody": {
                    "id": 2243,
                    "nodeType": "Block",
                    "src": "3037:567:11",
                    "statements": [
                      {
                        "assignments": [
                          2201
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2201,
                            "mutability": "mutable",
                            "name": "rewardAmount",
                            "nameLocation": "3059:12:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 2243,
                            "src": "3051:20:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2200,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3051:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2204,
                        "initialValue": {
                          "expression": {
                            "id": 2202,
                            "name": "info",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2175,
                            "src": "3074:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StakingRewardsInfo_$1986_storage_ptr",
                              "typeString": "struct StakingRewardsFactory.StakingRewardsInfo storage pointer"
                            }
                          },
                          "id": 2203,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "rewardAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1983,
                          "src": "3074:17:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3051:40:11"
                      },
                      {
                        "assignments": [
                          2206
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2206,
                            "mutability": "mutable",
                            "name": "duration",
                            "nameLocation": "3113:8:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 2243,
                            "src": "3105:16:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2205,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3105:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2209,
                        "initialValue": {
                          "expression": {
                            "id": 2207,
                            "name": "info",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2175,
                            "src": "3124:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StakingRewardsInfo_$1986_storage_ptr",
                              "typeString": "struct StakingRewardsFactory.StakingRewardsInfo storage pointer"
                            }
                          },
                          "id": 2208,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "duration",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1985,
                          "src": "3124:13:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3105:32:11"
                      },
                      {
                        "expression": {
                          "id": 2214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2210,
                              "name": "info",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2175,
                              "src": "3151:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakingRewardsInfo_$1986_storage_ptr",
                                "typeString": "struct StakingRewardsFactory.StakingRewardsInfo storage pointer"
                              }
                            },
                            "id": 2212,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "rewardAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1983,
                            "src": "3151:17:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 2213,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3171:1:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3151:21:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2215,
                        "nodeType": "ExpressionStatement",
                        "src": "3151:21:11"
                      },
                      {
                        "expression": {
                          "id": 2220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2216,
                              "name": "info",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2175,
                              "src": "3186:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakingRewardsInfo_$1986_storage_ptr",
                                "typeString": "struct StakingRewardsFactory.StakingRewardsInfo storage pointer"
                              }
                            },
                            "id": 2218,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "duration",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1985,
                            "src": "3186:13:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 2219,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3202:1:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3186:17:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2221,
                        "nodeType": "ExpressionStatement",
                        "src": "3186:17:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 2227,
                                    "name": "info",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2175,
                                    "src": "3294:4:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_StakingRewardsInfo_$1986_storage_ptr",
                                      "typeString": "struct StakingRewardsFactory.StakingRewardsInfo storage pointer"
                                    }
                                  },
                                  "id": 2228,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "stakingRewards",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1981,
                                  "src": "3294:19:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 2229,
                                  "name": "rewardAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2201,
                                  "src": "3335:12:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 2224,
                                      "name": "rewardsToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1974,
                                      "src": "3250:12:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 2223,
                                    "name": "IERC20",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 222,
                                    "src": "3243:6:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC20_$222_$",
                                      "typeString": "type(contract IERC20)"
                                    }
                                  },
                                  "id": 2225,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3243:20:11",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$222",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 2226,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "transfer",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 171,
                                "src": "3243:29:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256) external returns (bool)"
                                }
                              },
                              "id": 2230,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3243:122:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5374616b696e6752657761726473466163746f72793a3a636c61696d526577617264416d6f756e743a207472616e73666572206661696c6564",
                              "id": 2231,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3383:59:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4555184ce2735e9f8f4ecda088b7cd7226994771f64184a83505686113a49797",
                                "typeString": "literal_string \"StakingRewardsFactory::claimRewardAmount: transfer failed\""
                              },
                              "value": "StakingRewardsFactory::claimRewardAmount: transfer failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4555184ce2735e9f8f4ecda088b7cd7226994771f64184a83505686113a49797",
                                "typeString": "literal_string \"StakingRewardsFactory::claimRewardAmount: transfer failed\""
                              }
                            ],
                            "id": 2222,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "3218:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3218:238:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2233,
                        "nodeType": "ExpressionStatement",
                        "src": "3218:238:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2239,
                              "name": "rewardAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2201,
                              "src": "3541:12:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2240,
                              "name": "duration",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2206,
                              "src": "3571:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 2235,
                                    "name": "info",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2175,
                                    "src": "3485:4:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_StakingRewardsInfo_$1986_storage_ptr",
                                      "typeString": "struct StakingRewardsFactory.StakingRewardsInfo storage pointer"
                                    }
                                  },
                                  "id": 2236,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "stakingRewards",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1981,
                                  "src": "3485:19:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2234,
                                "name": "StakingRewards",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1957,
                                "src": "3470:14:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_StakingRewards_$1957_$",
                                  "typeString": "type(contract StakingRewards)"
                                }
                              },
                              "id": 2237,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3470:35:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingRewards_$1957",
                                "typeString": "contract StakingRewards"
                              }
                            },
                            "id": 2238,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "claimRewardAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1800,
                            "src": "3470:53:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256) external"
                            }
                          },
                          "id": 2241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3470:123:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2242,
                        "nodeType": "ExpressionStatement",
                        "src": "3470:123:11"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "cc0b7138",
            "id": 2246,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2163,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2162,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "2565:9:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "2565:9:11"
              }
            ],
            "name": "claimRewardAmount",
            "nameLocation": "2518:17:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2161,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2160,
                  "mutability": "mutable",
                  "name": "stakingToken",
                  "nameLocation": "2544:12:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2246,
                  "src": "2536:20:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2159,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2536:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2535:22:11"
            },
            "returnParameters": {
              "id": 2164,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2575:0:11"
            },
            "scope": 2266,
            "src": "2509:1101:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2264,
              "nodeType": "Block",
              "src": "3691:63:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2259,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3728:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3728:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2261,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2250,
                        "src": "3740:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2256,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2248,
                            "src": "3708:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2255,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 222,
                          "src": "3701:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$222_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 2257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3701:13:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$222",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2258,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 253,
                      "src": "3701:26:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$222_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$222_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 2262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3701:46:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2263,
                  "nodeType": "ExpressionStatement",
                  "src": "3701:46:11"
                }
              ]
            },
            "functionSelector": "7572719e",
            "id": 2265,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2253,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2252,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "3681:9:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "3681:9:11"
              }
            ],
            "name": "pullExtraTokens",
            "nameLocation": "3625:15:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2251,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2248,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "3649:5:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2265,
                  "src": "3641:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2247,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3641:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2250,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3664:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2265,
                  "src": "3656:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2249,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3656:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3640:31:11"
            },
            "returnParameters": {
              "id": 2254,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3691:0:11"
            },
            "scope": 2266,
            "src": "3616:138:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2267,
        "src": "267:3489:11",
        "usedErrors": []
      }
    ],
    "src": "32:3725:11"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/StakingRewardsFactory.sol",
    "exportedSymbols": {
      "Address": [
        743
      ],
      "Context": [
        765
      ],
      "IERC20": [
        222
      ],
      "IStakingRewards": [
        1232
      ],
      "Math": [
        853
      ],
      "Ownable": [
        104
      ],
      "ReentrancyGuard": [
        144
      ],
      "RewardsDistributionRecipient": [
        1249
      ],
      "SafeERC20": [
        446
      ],
      "SafeMath": [
        1165
      ],
      "StakingRewards": [
        1957
      ],
      "StakingRewardsFactory": [
        2266
      ]
    },
    "id": 2267,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1959,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:11"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 1960,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2267,
        "sourceUnit": 105,
        "src": "57:52:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 1961,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2267,
        "sourceUnit": 447,
        "src": "110:65:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 1962,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2267,
        "sourceUnit": 1166,
        "src": "176:57:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/StakingRewards.sol",
        "file": "./StakingRewards.sol",
        "id": 1963,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2267,
        "sourceUnit": 1958,
        "src": "235:30:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1964,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 104,
              "src": "301:7:11"
            },
            "id": 1965,
            "nodeType": "InheritanceSpecifier",
            "src": "301:7:11"
          }
        ],
        "canonicalName": "StakingRewardsFactory",
        "contractDependencies": [
          1957
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2266,
        "linearizedBaseContracts": [
          2266,
          104,
          765
        ],
        "name": "StakingRewardsFactory",
        "nameLocation": "276:21:11",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1969,
            "libraryName": {
              "id": 1966,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 446,
              "src": "321:9:11"
            },
            "nodeType": "UsingForDirective",
            "src": "315:27:11",
            "typeName": {
              "id": 1968,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1967,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 222,
                "src": "335:6:11"
              },
              "referencedDeclaration": 222,
              "src": "335:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$222",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 1972,
            "libraryName": {
              "id": 1970,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1165,
              "src": "353:8:11"
            },
            "nodeType": "UsingForDirective",
            "src": "347:27:11",
            "typeName": {
              "id": 1971,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "366:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "d1af0c7d",
            "id": 1974,
            "mutability": "mutable",
            "name": "rewardsToken",
            "nameLocation": "395:12:11",
            "nodeType": "VariableDeclaration",
            "scope": 2266,
            "src": "380:27:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1973,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "380:7:11",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a0928c11",
            "id": 1976,
            "mutability": "mutable",
            "name": "stakingRewardsGenesis",
            "nameLocation": "428:21:11",
            "nodeType": "VariableDeclaration",
            "scope": 2266,
            "src": "413:36:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1975,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "413:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "344e5e34",
            "id": 1979,
            "mutability": "mutable",
            "name": "stakingTokens",
            "nameLocation": "473:13:11",
            "nodeType": "VariableDeclaration",
            "scope": 2266,
            "src": "456:30:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 1977,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "456:7:11",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 1978,
              "nodeType": "ArrayTypeName",
              "src": "456:9:11",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "StakingRewardsFactory.StakingRewardsInfo",
            "id": 1986,
            "members": [
              {
                "constant": false,
                "id": 1981,
                "mutability": "mutable",
                "name": "stakingRewards",
                "nameLocation": "537:14:11",
                "nodeType": "VariableDeclaration",
                "scope": 1986,
                "src": "529:22:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1980,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "529:7:11",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1983,
                "mutability": "mutable",
                "name": "rewardAmount",
                "nameLocation": "569:12:11",
                "nodeType": "VariableDeclaration",
                "scope": 1986,
                "src": "561:20:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1982,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "561:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1985,
                "mutability": "mutable",
                "name": "duration",
                "nameLocation": "599:8:11",
                "nodeType": "VariableDeclaration",
                "scope": 1986,
                "src": "591:16:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1984,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "591:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "StakingRewardsInfo",
            "nameLocation": "500:18:11",
            "nodeType": "StructDefinition",
            "scope": 2266,
            "src": "493:121:11",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6cf8caf8",
            "id": 1991,
            "mutability": "mutable",
            "name": "stakingRewardsInfoByStakingToken",
            "nameLocation": "674:32:11",
            "nodeType": "VariableDeclaration",
            "scope": 2266,
            "src": "620:86:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingRewardsInfo_$1986_storage_$",
              "typeString": "mapping(address => struct StakingRewardsFactory.StakingRewardsInfo)"
            },
            "typeName": {
              "id": 1990,
              "keyType": {
                "id": 1987,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "628:7:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "620:38:11",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingRewardsInfo_$1986_storage_$",
                "typeString": "mapping(address => struct StakingRewardsFactory.StakingRewardsInfo)"
              },
              "valueType": {
                "id": 1989,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1988,
                  "name": "StakingRewardsInfo",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1986,
                  "src": "639:18:11"
                },
                "referencedDeclaration": 1986,
                "src": "639:18:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_StakingRewardsInfo_$1986_storage_ptr",
                  "typeString": "struct StakingRewardsFactory.StakingRewardsInfo"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 2016,
              "nodeType": "Block",
              "src": "802:252:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2001,
                          "name": "_stakingRewardsGenesis",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1995,
                          "src": "833:22:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 2002,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "859:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 2003,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "859:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "833:41:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b696e6752657761726473466163746f72793a3a636f6e7374727563746f723a2067656e6573697320746f6f20736f6f6e",
                        "id": 2005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "888:54:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f22e14100106eb9f2180e576eda6e762fdcbd26e14106a6823275a3b8fdea515",
                          "typeString": "literal_string \"StakingRewardsFactory::constructor: genesis too soon\""
                        },
                        "value": "StakingRewardsFactory::constructor: genesis too soon"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f22e14100106eb9f2180e576eda6e762fdcbd26e14106a6823275a3b8fdea515",
                          "typeString": "literal_string \"StakingRewardsFactory::constructor: genesis too soon\""
                        }
                      ],
                      "id": 2000,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "812:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "812:140:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2007,
                  "nodeType": "ExpressionStatement",
                  "src": "812:140:11"
                },
                {
                  "expression": {
                    "id": 2010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2008,
                      "name": "rewardsToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1974,
                      "src": "963:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2009,
                      "name": "_rewardsToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1993,
                      "src": "978:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "963:28:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2011,
                  "nodeType": "ExpressionStatement",
                  "src": "963:28:11"
                },
                {
                  "expression": {
                    "id": 2014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2012,
                      "name": "stakingRewardsGenesis",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1976,
                      "src": "1001:21:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2013,
                      "name": "_stakingRewardsGenesis",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1995,
                      "src": "1025:22:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1001:46:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2015,
                  "nodeType": "ExpressionStatement",
                  "src": "1001:46:11"
                }
              ]
            },
            "id": 2017,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [],
                "id": 1998,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 1997,
                  "name": "Ownable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 104,
                  "src": "788:7:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "788:9:11"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1996,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1993,
                  "mutability": "mutable",
                  "name": "_rewardsToken",
                  "nameLocation": "733:13:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2017,
                  "src": "725:21:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1992,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "725:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1995,
                  "mutability": "mutable",
                  "name": "_stakingRewardsGenesis",
                  "nameLocation": "756:22:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2017,
                  "src": "748:30:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1994,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "748:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "724:55:11"
            },
            "returnParameters": {
              "id": 1999,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "802:0:11"
            },
            "scope": 2266,
            "src": "713:341:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2082,
              "nodeType": "Block",
              "src": "1192:508:11",
              "statements": [
                {
                  "assignments": [
                    2030
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2030,
                      "mutability": "mutable",
                      "name": "info",
                      "nameLocation": "1229:4:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 2082,
                      "src": "1202:31:11",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakingRewardsInfo_$1986_storage_ptr",
                        "typeString": "struct StakingRewardsFactory.StakingRewardsInfo"
                      },
                      "typeName": {
                        "id": 2029,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2028,
                          "name": "StakingRewardsInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1986,
                          "src": "1202:18:11"
                        },
                        "referencedDeclaration": 1986,
                        "src": "1202:18:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakingRewardsInfo_$1986_storage_ptr",
                          "typeString": "struct StakingRewardsFactory.StakingRewardsInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2034,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2031,
                      "name": "stakingRewardsInfoByStakingToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1991,
                      "src": "1236:32:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingRewardsInfo_$1986_storage_$",
                        "typeString": "mapping(address => struct StakingRewardsFactory.StakingRewardsInfo storage ref)"
                      }
                    },
                    "id": 2033,
                    "indexExpression": {
                      "id": 2032,
                      "name": "stakingToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2019,
                      "src": "1282:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1236:68:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakingRewardsInfo_$1986_storage",
                      "typeString": "struct StakingRewardsFactory.StakingRewardsInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1202:102:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2036,
                            "name": "info",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2030,
                            "src": "1335:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StakingRewardsInfo_$1986_storage_ptr",
                              "typeString": "struct StakingRewardsFactory.StakingRewardsInfo storage pointer"
                            }
                          },
                          "id": 2037,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "stakingRewards",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1981,
                          "src": "1335:19:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2040,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1366:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2039,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1358:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2038,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1358:7:11",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1358:10:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1335:33:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b696e6752657761726473466163746f72793a3a6465706c6f793a20616c7265616479206465706c6f796564",
                        "id": 2043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1382:49:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_77d8567a7b7bf9a9a30ea727f6e525cae6667d736cdaff555c86db8d81648a1a",
                          "typeString": "literal_string \"StakingRewardsFactory::deploy: already deployed\""
                        },
                        "value": "StakingRewardsFactory::deploy: already deployed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_77d8567a7b7bf9a9a30ea727f6e525cae6667d736cdaff555c86db8d81648a1a",
                          "typeString": "literal_string \"StakingRewardsFactory::deploy: already deployed\""
                        }
                      ],
                      "id": 2035,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1314:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1314:127:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2045,
                  "nodeType": "ExpressionStatement",
                  "src": "1314:127:11"
                },
                {
                  "expression": {
                    "id": 2062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2046,
                        "name": "info",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2030,
                        "src": "1452:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakingRewardsInfo_$1986_storage_ptr",
                          "typeString": "struct StakingRewardsFactory.StakingRewardsInfo storage pointer"
                        }
                      },
                      "id": 2048,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "stakingRewards",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1981,
                      "src": "1452:19:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2056,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "1522:4:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingRewardsFactory_$2266",
                                    "typeString": "contract StakingRewardsFactory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_StakingRewardsFactory_$2266",
                                    "typeString": "contract StakingRewardsFactory"
                                  }
                                ],
                                "id": 2055,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1514:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2054,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1514:7:11",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2057,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1514:13:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2058,
                              "name": "rewardsToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1974,
                              "src": "1529:12:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2059,
                              "name": "stakingToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2019,
                              "src": "1543:12:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2053,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "1495:18:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_address_$returns$_t_contract$_StakingRewards_$1957_$",
                              "typeString": "function (address,address,address) returns (contract StakingRewards)"
                            },
                            "typeName": {
                              "id": 2052,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2051,
                                "name": "StakingRewards",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1957,
                                "src": "1499:14:11"
                              },
                              "referencedDeclaration": 1957,
                              "src": "1499:14:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingRewards_$1957",
                                "typeString": "contract StakingRewards"
                              }
                            }
                          },
                          "id": 2060,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1495:61:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingRewards_$1957",
                            "typeString": "contract StakingRewards"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_StakingRewards_$1957",
                            "typeString": "contract StakingRewards"
                          }
                        ],
                        "id": 2050,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1474:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 2049,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1474:7:11",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2061,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1474:92:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1452:114:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2063,
                  "nodeType": "ExpressionStatement",
                  "src": "1452:114:11"
                },
                {
                  "expression": {
                    "id": 2068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2064,
                        "name": "info",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2030,
                        "src": "1577:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakingRewardsInfo_$1986_storage_ptr",
                          "typeString": "struct StakingRewardsFactory.StakingRewardsInfo storage pointer"
                        }
                      },
                      "id": 2066,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "rewardAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1983,
                      "src": "1577:17:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2067,
                      "name": "rewardAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2021,
                      "src": "1597:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1577:32:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2069,
                  "nodeType": "ExpressionStatement",
                  "src": "1577:32:11"
                },
                {
                  "expression": {
                    "id": 2074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2070,
                        "name": "info",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2030,
                        "src": "1619:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakingRewardsInfo_$1986_storage_ptr",
                          "typeString": "struct StakingRewardsFactory.StakingRewardsInfo storage pointer"
                        }
                      },
                      "id": 2072,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "duration",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1985,
                      "src": "1619:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2073,
                      "name": "rewardsDuration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2023,
                      "src": "1635:15:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1619:31:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2075,
                  "nodeType": "ExpressionStatement",
                  "src": "1619:31:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2079,
                        "name": "stakingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2019,
                        "src": "1680:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2076,
                        "name": "stakingTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1979,
                        "src": "1661:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 2078,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1661:18:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 2080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1661:32:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2081,
                  "nodeType": "ExpressionStatement",
                  "src": "1661:32:11"
                }
              ]
            },
            "functionSelector": "cfda5478",
            "id": 2083,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2026,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2025,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "1182:9:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "1182:9:11"
              }
            ],
            "name": "deploy",
            "nameLocation": "1069:6:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2024,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2019,
                  "mutability": "mutable",
                  "name": "stakingToken",
                  "nameLocation": "1093:12:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2083,
                  "src": "1085:20:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2018,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1085:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2021,
                  "mutability": "mutable",
                  "name": "rewardAmount",
                  "nameLocation": "1123:12:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2083,
                  "src": "1115:20:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2020,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1115:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2023,
                  "mutability": "mutable",
                  "name": "rewardsDuration",
                  "nameLocation": "1153:15:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2083,
                  "src": "1145:23:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2022,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1145:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1075:99:11"
            },
            "returnParameters": {
              "id": 2027,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1192:0:11"
            },
            "scope": 2266,
            "src": "1060:640:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2124,
              "nodeType": "Block",
              "src": "1838:336:11",
              "statements": [
                {
                  "assignments": [
                    2096
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2096,
                      "mutability": "mutable",
                      "name": "info",
                      "nameLocation": "1875:4:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 2124,
                      "src": "1848:31:11",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakingRewardsInfo_$1986_storage_ptr",
                        "typeString": "struct StakingRewardsFactory.StakingRewardsInfo"
                      },
                      "typeName": {
                        "id": 2095,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2094,
                          "name": "StakingRewardsInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1986,
                          "src": "1848:18:11"
                        },
                        "referencedDeclaration": 1986,
                        "src": "1848:18:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakingRewardsInfo_$1986_storage_ptr",
                          "typeString": "struct StakingRewardsFactory.StakingRewardsInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2100,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2097,
                      "name": "stakingRewardsInfoByStakingToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1991,
                      "src": "1882:32:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingRewardsInfo_$1986_storage_$",
                        "typeString": "mapping(address => struct StakingRewardsFactory.StakingRewardsInfo storage ref)"
                      }
                    },
                    "id": 2099,
                    "indexExpression": {
                      "id": 2098,
                      "name": "stakingToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2085,
                      "src": "1928:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1882:68:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakingRewardsInfo_$1986_storage",
                      "typeString": "struct StakingRewardsFactory.StakingRewardsInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1848:102:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2102,
                            "name": "info",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2096,
                            "src": "1981:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StakingRewardsInfo_$1986_storage_ptr",
                              "typeString": "struct StakingRewardsFactory.StakingRewardsInfo storage pointer"
                            }
                          },
                          "id": 2103,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "stakingRewards",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1981,
                          "src": "1981:19:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2106,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2012:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2105,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2004:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2104,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2004:7:11",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2004:10:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1981:33:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b696e6752657761726473466163746f72793a3a7570646174653a206e6f74206465706c6f796564",
                        "id": 2109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2028:45:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2680931cb8d2562eb985862b2b0f9b8f59411984dfac76c0f3e1c1ba0c024efb",
                          "typeString": "literal_string \"StakingRewardsFactory::update: not deployed\""
                        },
                        "value": "StakingRewardsFactory::update: not deployed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2680931cb8d2562eb985862b2b0f9b8f59411984dfac76c0f3e1c1ba0c024efb",
                          "typeString": "literal_string \"StakingRewardsFactory::update: not deployed\""
                        }
                      ],
                      "id": 2101,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1960:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1960:123:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2111,
                  "nodeType": "ExpressionStatement",
                  "src": "1960:123:11"
                },
                {
                  "expression": {
                    "id": 2116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2112,
                        "name": "info",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2096,
                        "src": "2094:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakingRewardsInfo_$1986_storage_ptr",
                          "typeString": "struct StakingRewardsFactory.StakingRewardsInfo storage pointer"
                        }
                      },
                      "id": 2114,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "rewardAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1983,
                      "src": "2094:17:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2115,
                      "name": "rewardAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2087,
                      "src": "2114:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2094:32:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2117,
                  "nodeType": "ExpressionStatement",
                  "src": "2094:32:11"
                },
                {
                  "expression": {
                    "id": 2122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2118,
                        "name": "info",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2096,
                        "src": "2136:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakingRewardsInfo_$1986_storage_ptr",
                          "typeString": "struct StakingRewardsFactory.StakingRewardsInfo storage pointer"
                        }
                      },
                      "id": 2120,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "duration",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1985,
                      "src": "2136:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2121,
                      "name": "rewardsDuration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2089,
                      "src": "2152:15:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2136:31:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2123,
                  "nodeType": "ExpressionStatement",
                  "src": "2136:31:11"
                }
              ]
            },
            "functionSelector": "d09b6d43",
            "id": 2125,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2092,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2091,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "1828:9:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "1828:9:11"
              }
            ],
            "name": "update",
            "nameLocation": "1715:6:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2090,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2085,
                  "mutability": "mutable",
                  "name": "stakingToken",
                  "nameLocation": "1739:12:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2125,
                  "src": "1731:20:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2084,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1731:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2087,
                  "mutability": "mutable",
                  "name": "rewardAmount",
                  "nameLocation": "1769:12:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2125,
                  "src": "1761:20:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2086,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1761:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2089,
                  "mutability": "mutable",
                  "name": "rewardsDuration",
                  "nameLocation": "1799:15:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2125,
                  "src": "1791:23:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2088,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1791:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1721:99:11"
            },
            "returnParameters": {
              "id": 2093,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1838:0:11"
            },
            "scope": 2266,
            "src": "1706:468:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2157,
              "nodeType": "Block",
              "src": "2227:276:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2131,
                            "name": "stakingTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1979,
                            "src": "2258:13:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 2132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2258:20:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2281:1:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2258:24:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b696e6752657761726473466163746f72793a3a636c61696d526577617264416d6f756e74733a2063616c6c6564206265666f726520616e79206465706c6f7973",
                        "id": 2135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2296:70:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e0bd7787e67b6d58949cce0263a4e9f3ec69a807c23e665463c6edda538d1836",
                          "typeString": "literal_string \"StakingRewardsFactory::claimRewardAmounts: called before any deploys\""
                        },
                        "value": "StakingRewardsFactory::claimRewardAmounts: called before any deploys"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e0bd7787e67b6d58949cce0263a4e9f3ec69a807c23e665463c6edda538d1836",
                          "typeString": "literal_string \"StakingRewardsFactory::claimRewardAmounts: called before any deploys\""
                        }
                      ],
                      "id": 2130,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2237:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2237:139:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2137,
                  "nodeType": "ExpressionStatement",
                  "src": "2237:139:11"
                },
                {
                  "body": {
                    "id": 2155,
                    "nodeType": "Block",
                    "src": "2437:60:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 2150,
                                "name": "stakingTokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1979,
                                "src": "2469:13:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 2152,
                              "indexExpression": {
                                "id": 2151,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2139,
                                "src": "2483:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2469:16:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2149,
                            "name": "claimRewardAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2246,
                            "src": "2451:17:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 2153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2451:35:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2154,
                        "nodeType": "ExpressionStatement",
                        "src": "2451:35:11"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2142,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2139,
                      "src": "2406:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 2143,
                        "name": "stakingTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1979,
                        "src": "2410:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 2144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2410:20:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2406:24:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2156,
                  "initializationExpression": {
                    "assignments": [
                      2139
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2139,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2399:1:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2156,
                        "src": "2391:9:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2138,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2391:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2141,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2403:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2391:13:11"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2147,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2432:3:11",
                      "subExpression": {
                        "id": 2146,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2139,
                        "src": "2432:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2148,
                    "nodeType": "ExpressionStatement",
                    "src": "2432:3:11"
                  },
                  "nodeType": "ForStatement",
                  "src": "2386:111:11"
                }
              ]
            },
            "functionSelector": "bf44ba6c",
            "id": 2158,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2128,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2127,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "2217:9:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "2217:9:11"
              }
            ],
            "name": "claimRewardAmounts",
            "nameLocation": "2189:18:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2126,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2207:2:11"
            },
            "returnParameters": {
              "id": 2129,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2227:0:11"
            },
            "scope": 2266,
            "src": "2180:323:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2245,
              "nodeType": "Block",
              "src": "2575:1035:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2166,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "2606:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 2167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "2606:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 2168,
                          "name": "stakingRewardsGenesis",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1976,
                          "src": "2625:21:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2606:40:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b696e6752657761726473466163746f72793a3a636c61696d526577617264416d6f756e743a20746f6f20736f6f6e",
                        "id": 2170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2660:52:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_916e5dd87ddc58653085017fdc1077365484d358d0456882e4fc6ba909101e24",
                          "typeString": "literal_string \"StakingRewardsFactory::claimRewardAmount: too soon\""
                        },
                        "value": "StakingRewardsFactory::claimRewardAmount: too soon"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_916e5dd87ddc58653085017fdc1077365484d358d0456882e4fc6ba909101e24",
                          "typeString": "literal_string \"StakingRewardsFactory::claimRewardAmount: too soon\""
                        }
                      ],
                      "id": 2165,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2585:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2585:137:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2172,
                  "nodeType": "ExpressionStatement",
                  "src": "2585:137:11"
                },
                {
                  "assignments": [
                    2175
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2175,
                      "mutability": "mutable",
                      "name": "info",
                      "nameLocation": "2759:4:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 2245,
                      "src": "2732:31:11",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakingRewardsInfo_$1986_storage_ptr",
                        "typeString": "struct StakingRewardsFactory.StakingRewardsInfo"
                      },
                      "typeName": {
                        "id": 2174,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2173,
                          "name": "StakingRewardsInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1986,
                          "src": "2732:18:11"
                        },
                        "referencedDeclaration": 1986,
                        "src": "2732:18:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakingRewardsInfo_$1986_storage_ptr",
                          "typeString": "struct StakingRewardsFactory.StakingRewardsInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2179,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2176,
                      "name": "stakingRewardsInfoByStakingToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1991,
                      "src": "2766:32:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingRewardsInfo_$1986_storage_$",
                        "typeString": "mapping(address => struct StakingRewardsFactory.StakingRewardsInfo storage ref)"
                      }
                    },
                    "id": 2178,
                    "indexExpression": {
                      "id": 2177,
                      "name": "stakingToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2160,
                      "src": "2812:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2766:68:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakingRewardsInfo_$1986_storage",
                      "typeString": "struct StakingRewardsFactory.StakingRewardsInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2732:102:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2181,
                            "name": "info",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2175,
                            "src": "2865:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StakingRewardsInfo_$1986_storage_ptr",
                              "typeString": "struct StakingRewardsFactory.StakingRewardsInfo storage pointer"
                            }
                          },
                          "id": 2182,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "stakingRewards",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1981,
                          "src": "2865:19:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2185,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2896:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2184,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2888:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2183,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2888:7:11",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2888:10:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2865:33:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b696e6752657761726473466163746f72793a3a636c61696d526577617264416d6f756e743a206e6f74206465706c6f796564",
                        "id": 2188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2912:56:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_22bfc8d55e681659d9ff180bcf801d6948db86e70b2d68ffccbdc7deaeaa8054",
                          "typeString": "literal_string \"StakingRewardsFactory::claimRewardAmount: not deployed\""
                        },
                        "value": "StakingRewardsFactory::claimRewardAmount: not deployed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_22bfc8d55e681659d9ff180bcf801d6948db86e70b2d68ffccbdc7deaeaa8054",
                          "typeString": "literal_string \"StakingRewardsFactory::claimRewardAmount: not deployed\""
                        }
                      ],
                      "id": 2180,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2844:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2844:134:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2190,
                  "nodeType": "ExpressionStatement",
                  "src": "2844:134:11"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2194,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 2191,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2175,
                          "src": "2993:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StakingRewardsInfo_$1986_storage_ptr",
                            "typeString": "struct StakingRewardsFactory.StakingRewardsInfo storage pointer"
                          }
                        },
                        "id": 2192,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rewardAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1983,
                        "src": "2993:17:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 2193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3013:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2993:21:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 2195,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2175,
                          "src": "3018:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StakingRewardsInfo_$1986_storage_ptr",
                            "typeString": "struct StakingRewardsFactory.StakingRewardsInfo storage pointer"
                          }
                        },
                        "id": 2196,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "duration",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1985,
                        "src": "3018:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 2197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3034:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3018:17:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2993:42:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2244,
                  "nodeType": "IfStatement",
                  "src": "2989:615:11",
                  "trueBody": {
                    "id": 2243,
                    "nodeType": "Block",
                    "src": "3037:567:11",
                    "statements": [
                      {
                        "assignments": [
                          2201
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2201,
                            "mutability": "mutable",
                            "name": "rewardAmount",
                            "nameLocation": "3059:12:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 2243,
                            "src": "3051:20:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2200,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3051:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2204,
                        "initialValue": {
                          "expression": {
                            "id": 2202,
                            "name": "info",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2175,
                            "src": "3074:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StakingRewardsInfo_$1986_storage_ptr",
                              "typeString": "struct StakingRewardsFactory.StakingRewardsInfo storage pointer"
                            }
                          },
                          "id": 2203,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "rewardAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1983,
                          "src": "3074:17:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3051:40:11"
                      },
                      {
                        "assignments": [
                          2206
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2206,
                            "mutability": "mutable",
                            "name": "duration",
                            "nameLocation": "3113:8:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 2243,
                            "src": "3105:16:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2205,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3105:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2209,
                        "initialValue": {
                          "expression": {
                            "id": 2207,
                            "name": "info",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2175,
                            "src": "3124:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StakingRewardsInfo_$1986_storage_ptr",
                              "typeString": "struct StakingRewardsFactory.StakingRewardsInfo storage pointer"
                            }
                          },
                          "id": 2208,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "duration",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1985,
                          "src": "3124:13:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3105:32:11"
                      },
                      {
                        "expression": {
                          "id": 2214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2210,
                              "name": "info",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2175,
                              "src": "3151:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakingRewardsInfo_$1986_storage_ptr",
                                "typeString": "struct StakingRewardsFactory.StakingRewardsInfo storage pointer"
                              }
                            },
                            "id": 2212,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "rewardAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1983,
                            "src": "3151:17:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 2213,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3171:1:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3151:21:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2215,
                        "nodeType": "ExpressionStatement",
                        "src": "3151:21:11"
                      },
                      {
                        "expression": {
                          "id": 2220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2216,
                              "name": "info",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2175,
                              "src": "3186:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakingRewardsInfo_$1986_storage_ptr",
                                "typeString": "struct StakingRewardsFactory.StakingRewardsInfo storage pointer"
                              }
                            },
                            "id": 2218,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "duration",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1985,
                            "src": "3186:13:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 2219,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3202:1:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3186:17:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2221,
                        "nodeType": "ExpressionStatement",
                        "src": "3186:17:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 2227,
                                    "name": "info",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2175,
                                    "src": "3294:4:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_StakingRewardsInfo_$1986_storage_ptr",
                                      "typeString": "struct StakingRewardsFactory.StakingRewardsInfo storage pointer"
                                    }
                                  },
                                  "id": 2228,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "stakingRewards",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1981,
                                  "src": "3294:19:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 2229,
                                  "name": "rewardAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2201,
                                  "src": "3335:12:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 2224,
                                      "name": "rewardsToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1974,
                                      "src": "3250:12:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 2223,
                                    "name": "IERC20",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 222,
                                    "src": "3243:6:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC20_$222_$",
                                      "typeString": "type(contract IERC20)"
                                    }
                                  },
                                  "id": 2225,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3243:20:11",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$222",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 2226,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "transfer",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 171,
                                "src": "3243:29:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256) external returns (bool)"
                                }
                              },
                              "id": 2230,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3243:122:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5374616b696e6752657761726473466163746f72793a3a636c61696d526577617264416d6f756e743a207472616e73666572206661696c6564",
                              "id": 2231,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3383:59:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4555184ce2735e9f8f4ecda088b7cd7226994771f64184a83505686113a49797",
                                "typeString": "literal_string \"StakingRewardsFactory::claimRewardAmount: transfer failed\""
                              },
                              "value": "StakingRewardsFactory::claimRewardAmount: transfer failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4555184ce2735e9f8f4ecda088b7cd7226994771f64184a83505686113a49797",
                                "typeString": "literal_string \"StakingRewardsFactory::claimRewardAmount: transfer failed\""
                              }
                            ],
                            "id": 2222,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "3218:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3218:238:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2233,
                        "nodeType": "ExpressionStatement",
                        "src": "3218:238:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2239,
                              "name": "rewardAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2201,
                              "src": "3541:12:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2240,
                              "name": "duration",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2206,
                              "src": "3571:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 2235,
                                    "name": "info",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2175,
                                    "src": "3485:4:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_StakingRewardsInfo_$1986_storage_ptr",
                                      "typeString": "struct StakingRewardsFactory.StakingRewardsInfo storage pointer"
                                    }
                                  },
                                  "id": 2236,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "stakingRewards",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1981,
                                  "src": "3485:19:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2234,
                                "name": "StakingRewards",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1957,
                                "src": "3470:14:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_StakingRewards_$1957_$",
                                  "typeString": "type(contract StakingRewards)"
                                }
                              },
                              "id": 2237,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3470:35:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingRewards_$1957",
                                "typeString": "contract StakingRewards"
                              }
                            },
                            "id": 2238,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "claimRewardAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1800,
                            "src": "3470:53:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256) external"
                            }
                          },
                          "id": 2241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3470:123:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2242,
                        "nodeType": "ExpressionStatement",
                        "src": "3470:123:11"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "cc0b7138",
            "id": 2246,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2163,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2162,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "2565:9:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "2565:9:11"
              }
            ],
            "name": "claimRewardAmount",
            "nameLocation": "2518:17:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2161,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2160,
                  "mutability": "mutable",
                  "name": "stakingToken",
                  "nameLocation": "2544:12:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2246,
                  "src": "2536:20:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2159,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2536:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2535:22:11"
            },
            "returnParameters": {
              "id": 2164,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2575:0:11"
            },
            "scope": 2266,
            "src": "2509:1101:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2264,
              "nodeType": "Block",
              "src": "3691:63:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2259,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3728:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3728:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2261,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2250,
                        "src": "3740:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2256,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2248,
                            "src": "3708:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2255,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 222,
                          "src": "3701:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$222_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 2257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3701:13:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$222",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2258,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 253,
                      "src": "3701:26:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$222_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$222_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 2262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3701:46:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2263,
                  "nodeType": "ExpressionStatement",
                  "src": "3701:46:11"
                }
              ]
            },
            "functionSelector": "7572719e",
            "id": 2265,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2253,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2252,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "3681:9:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "3681:9:11"
              }
            ],
            "name": "pullExtraTokens",
            "nameLocation": "3625:15:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2251,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2248,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "3649:5:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2265,
                  "src": "3641:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2247,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3641:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2250,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3664:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2265,
                  "src": "3656:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2249,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3656:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3640:31:11"
            },
            "returnParameters": {
              "id": 2254,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3691:0:11"
            },
            "scope": 2266,
            "src": "3616:138:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2267,
        "src": "267:3489:11",
        "usedErrors": []
      }
    ],
    "src": "32:3725:11"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.11+commit.d7f03943.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-02-06T20:54:39.286Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}